(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    433614,       9034]
NotebookOptionsPosition[    426558,       8811]
NotebookOutlinePosition[    427298,       8835]
CellTagsIndexPosition[    427255,       8832]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["(*++++ ---- The Discrete Crawler ---- ++++ *)", "Subtitle"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"Author", ":", " ", 
     RowBox[{"Patricio", " ", 
      RowBox[{"A", ".", " ", 
       RowBox[{"Vela", "--"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"Created", ":", " ", 
      RowBox[{"January", " ", "15"}]}]}], ",", " ", 
    RowBox[{"2002", "--"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"Created", ":", " ", 
      RowBox[{"January", " ", "15"}]}]}], ",", " ", 
    RowBox[{"2002", "--"}]}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.675262807018302*^9, 3.675262854841359*^9}}],

Cell[CellGroupData[{

Cell["(*--Initialization--*)", "Section"],

Cell[CellGroupData[{

Cell["(*--Load Libraries--*)", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", "Load"}], " ", "libraries", " ", "and", " ", "define", " ", 
    
    RowBox[{"objects", "--"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"<<", "ivamatica/defpackages.m"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"LoadPackages", "[", 
    RowBox[{"TANGENTS", "+", "TPRINCIPAL"}], "]"}], "\[IndentingNewLine]", 
   "DoneLoading", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Additional", " ", "basic", " ", "math", " ", 
     RowBox[{"functions", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"<<", "ivamatica/Basic/extras.m"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "For", " ", "dealing", " ", "with", " ", "equations", " ", "of", " ", 
     RowBox[{"motions", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"<<", "ivamatica/Dynamics/equations.m"}], "\[IndentingNewLine]", 
   RowBox[{"<<", "ivamatica/Dynamics/averaging.m"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Lagrangian", " ", 
     RowBox[{"mechanics", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"<<", "ivamatica/Mechanics/constraints.m"}], "\[IndentingNewLine]", 
   RowBox[{"<<", "ivamatica/Mechanics/kinematics.m"}], "\[IndentingNewLine]", 
   
   RowBox[{"<<", "ivamatica/Mechanics/lagrangian.m"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"For", " ", "creating", " ", "visual", " ", "movie", " ", 
     RowBox[{"output", "."}]}], " ", "*)"}], "\n", 
   RowBox[{"<<", "ivamatica/Graphics/anim.m"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.675262900000886*^9, 3.675263158403792*^9}, {
  3.675263290761609*^9, 3.675263306623474*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"UpSetDelayed", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Integer\\)\[NoBreak] in \
\[NoBreak]\\!\\(oInit[\\(\\(Binary, len_Integer\\)\\)]\\)\[NoBreak] is \
Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"UpSetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.675263152038436*^9, 3.675263311588035*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"UpSetDelayed", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Integer\\)\[NoBreak] in \
\[NoBreak]\\!\\(oInit[\\(\\(Binary, len_Integer, val_Integer\\)\\)]\\)\
\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"UpSetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.675263152038436*^9, 3.675263311634391*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"UpSetDelayed", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Integer\\)\[NoBreak] in \
\[NoBreak]\\!\\(oSet[\\(\\(\\(\\(Binary[b_]\\)\\), val_Integer\\)\\)]\\)\
\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"UpSetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.675263152038436*^9, 3.675263311680229*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(UpSetDelayed :: write\\), \\\"MessageName\\\"]\
\\)\[NoBreak] will be suppressed during this calculation. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.675263152038436*^9, 3.675263311684516*^9}],

Cell[BoxData["\<\"Loaded Euclidean package \\nLoaded Fiber Bundles package \
\\nLoaded Manifolds package \\nLoaded Vectors package \\nLoaded Tangents \
package \\nLoaded Tangent Fiber Bundles package \\nLoaded Tangent Manifolds \
package \\nLoaded Lie Groups package \\nLoaded Tangent Lie Groups package \
\\nLoaded Principal Bundles package \\nLoaded Tangent Principal Bundles \
package \\n\"\>"], "Output",
 CellChangeTimes->{3.67526315207263*^9, 3.6752633117422533`*^9}],

Cell[BoxData["\<\"Removed package loading variables.\"\>"], "Output",
 CellChangeTimes->{3.67526315207263*^9, 3.6752633117462*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", " ", "=", " ", "Euclidean"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TM", " ", "=", " ", "TEuclidean"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", "SE2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[GothicG]", " ", "=", " ", "se2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SuperscriptBox["\[GothicG]", "*"], " ", "=", " ", "dse2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TG", " ", "=", " ", "TSE2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tG", " ", "=", " ", "SE2xse2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dG", " ", "=", " ", "SE2xdse2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", "=", "ExSE2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TQ", " ", "=", " ", "TExTSE2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CO", " ", "=", " ", "Configuration"}], ";"}]}], "Input",
 CellChangeTimes->{{3.675263114582654*^9, 3.675263124648197*^9}, 
   3.675263333928605*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "spell1"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "spell"}], "]"}], ";"}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["(*--Configuration space and other variables--*)", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", " ", "=", " ", 
   RowBox[{"oInit", "[", 
    RowBox[{"G", ",", " ", "x", ",", " ", "y", ",", " ", "\[Theta]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dimG", "=", 
    RowBox[{"gDim", "[", "g", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "'"}], " ", "=", " ", 
   RowBox[{"oInit", "[", 
    RowBox[{"Vector", ",", " ", 
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"gLocal", "[", "g", "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "'"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "dimG"}], "}"}]}], "]"}]}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gdot", " ", "=", " ", 
    RowBox[{"oInit", "[", 
     RowBox[{"Vector", ",", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        OverscriptBox[
         RowBox[{
          RowBox[{"gLocal", "[", "g", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "."], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "dimG"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gp", " ", "=", " ", 
    RowBox[{"oInit", "[", 
     RowBox[{"TG", " ", ",", " ", "g", ",", " ", 
      RowBox[{"g", "'"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", " ", "=", " ", 
   RowBox[{"oInit", "[", 
    RowBox[{"M", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", " ", "Right", ",", " ", "Left"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "'"}], " ", "=", " ", 
   RowBox[{"oInit", "[", 
    RowBox[{"Vector", ",", " ", 
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"gLocal", "[", "r", "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "'"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{"Length", "[", "r", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rdot", " ", "=", " ", 
   RowBox[{"oInit", "[", 
    RowBox[{"Vector", ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       OverscriptBox[
        RowBox[{"r", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "."], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "r", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dimM", " ", "=", " ", 
    RowBox[{"gDim", "[", "r", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Xi]", " ", "=", " ", 
   RowBox[{"oInit", "[", 
    RowBox[{"\[GothicG]", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{"\[Xi]1", " ", ",", " ", "\[Xi]2", ",", " ", "\[Xi]3"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", " ", "=", " ", 
   RowBox[{"oInit", "[", 
    RowBox[{"\[GothicG]", ",", " ", 
     RowBox[{"{", " ", 
      RowBox[{"e1", ",", " ", "e2", ",", " ", "e3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"q", " ", "=", "  ", 
  RowBox[{"oInit", "[", 
   RowBox[{"Q", ",", " ", "r", ",", " ", "g"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"qp", " ", "=", " ", 
  RowBox[{"oInit", "[", 
   RowBox[{"TQ", ",", " ", "r", ",", " ", "g", ",", " ", 
    RowBox[{"r", "'"}], ",", " ", 
    RowBox[{"g", "'"}]}], "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.675263353757106*^9, 3.6752633629850492`*^9}}],

Cell[BoxData[
 RowBox[{"\<\"Group \"\>", " ", 
  TagBox[
   FormBox["\<\"Fiber {x, y, \[Theta]} with base {\[Psi], Right, Left}\"\>",
    StandardForm],
   Format]}]], "Output",
 CellChangeTimes->{{3.675263342065022*^9, 3.675263368665147*^9}}],

Cell[BoxData["\<\"Tangent Vector {{\[Psi]'}, {x', y', \[Theta]'}} of \
principal fiber bundle at the point {{\[Psi], Right, Left}, {x, y, \[Theta]}}\
\"\>"], "Output",
 CellChangeTimes->{{3.675263342065022*^9, 3.6752633686903763`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(*--Constants of the discrete crawler--*)", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"doSim", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"doSim", "\[Equal]", "1"}], ",", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"--", "Mass"}], " ", "of", " ", "rotating", " ", 
      RowBox[{"element", "--"}]}], "*)"}], 
    RowBox[{
     RowBox[{"pmR", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "Mass"}], " ", "of", " ", 
       RowBox[{"body", "--"}]}], "*)"}], 
     RowBox[{"pmB", "=", "4"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "Total"}], " ", "mass", " ", "of", " ", 
       RowBox[{"crawler", "--"}]}], "*)"}], 
     RowBox[{"pM", "=", 
      RowBox[{"pmB", "+", "pmR"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "Distance"}], " ", "from", " ", "center", " ", "to", " ", 
       RowBox[{"peg", "--"}]}], "*)"}], 
     RowBox[{"pd", "=", 
      FractionBox["1", "6"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "Inertia"}], " ", "of", " ", "the", " ", 
       RowBox[{"rotor", "--"}]}], "*)"}], 
     RowBox[{"pJr", "=", 
      FractionBox["1", "24"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "Inertia"}], " ", "of", " ", "the", " ", 
       RowBox[{"body", "--"}]}], "*)"}], 
     RowBox[{"pJb", "=", 
      RowBox[{
       FractionBox["1", "2"], "pM", " ", 
       RowBox[{"pd", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "Total"}], " ", "inertia", " ", "of", " ", 
       RowBox[{"crawler", "--"}]}], "*)"}], 
     RowBox[{"pJt", "=", 
      RowBox[{"pJb", "+", "pJr"}]}], ";"}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", " ", 
      RowBox[{
      "pmR", ",", " ", "pmB", ",", " ", "pM", ",", " ", "pd", ",", " ", "pJr",
        ",", " ", "pJb"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pJt", " ", "=", " ", 
      RowBox[{"pJb", " ", "+", " ", "pJr"}]}]}]}], "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["pJr", 
  RowBox[{"pJt", " ", "+", " ", "pJb"}]]], "Input"],

Cell[BoxData[
 FractionBox["3", "13"]], "Output",
 CellChangeTimes->{3.675263375218416*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(*--Equations of Motion--*)", "Section"],

Cell[CellGroupData[{

Cell["(*--Local Form of the Principal Connection--*)", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r\[ScriptCapitalA]", " ", "=", " ", 
   RowBox[{"oInit", "[", 
    RowBox[{"\[GothicG]", ",", " ", 
     RowBox[{
      FractionBox["pJr", 
       RowBox[{"pJt", " ", "+", " ", 
        RowBox[{"pM", " ", 
         SuperscriptBox["pd", "2"]}]}]], 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"-", "pd"}], ",", " ", "1"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l\[ScriptCapitalA]", " ", "=", " ", 
   RowBox[{"oInit", "[", 
    RowBox[{"\[GothicG]", ",", " ", 
     RowBox[{
      FractionBox["pJr", 
       RowBox[{"pJt", " ", "+", " ", 
        RowBox[{"pM", " ", 
         SuperscriptBox["pd", "2"]}]}]], 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "pd", ",", " ", "1"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(*--Lagrangian of the System--*)", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"L", "[", "qp_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lr", ",", "lrp", ",", " ", "lg", ",", " ", "lgp", ",", "lag"}], 
     "}"}], " ", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lr", " ", "=", " ", 
      RowBox[{"gLocal", "[", 
       RowBox[{"gBase", "[", "qp", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lg", " ", "=", " ", 
      RowBox[{"gLocal", "[", 
       RowBox[{"gGroup", "[", "qp", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lrp", " ", "=", " ", 
      RowBox[{"gLocal", "[", 
       RowBox[{"gBaseVector", "[", "qp", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lgp", " ", "=", " ", 
      RowBox[{"gLocal", "[", 
       RowBox[{"gGroupVector", "[", "qp", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"lag", " ", "=", " ", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "pM", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", " ", 
            RowBox[{"lgp", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], "2"], "+", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"lgp", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], "2"]}], ")"}]}], " ", "+",
        " ", 
       RowBox[{
        FractionBox["1", "2"], " ", "pJb", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"lgp", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ")"}], "2"]}]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lag", " ", "+=", " ", 
      RowBox[{
       FractionBox["1", "2"], " ", "pJr", " ", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"lgp", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"lrp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "2"]}]}], ";", 
     "\[IndentingNewLine]", "lag"}]}], "\[IndentingNewLine]", "]"}], 
  " "}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[ScriptL]", " ", "=", " ", 
  RowBox[{"cReduce", "[", " ", 
   RowBox[{
    RowBox[{"L", "[", "qp", "]"}], ",", " ", "gp", ",", " ", "\[Xi]"}], 
   "]"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[ScriptL]", "cR"], " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"\[ScriptL]", " ", "/.", " ", 
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"gLocal", "[", "\[Xi]", "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"gLocal", "[", "r\[ScriptCapitalA]", "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{
         RowBox[{"gLocal", "[", 
          RowBox[{"r", "'"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "   ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"gDim", "[", "\[Xi]", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  SubscriptBox["\[ScriptL]", "cL"], " ", "=", "  ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"\[ScriptL]", " ", "/.", " ", 
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"gLocal", "[", "\[Xi]", "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], " ", "\[Rule]", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"gLocal", "[", "l\[ScriptCapitalA]", "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", 
        RowBox[{
         RowBox[{"gLocal", "[", 
          RowBox[{"r", "'"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "   ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"gDim", "[", "\[Xi]", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["5", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Xi]1", "2"], "+", 
     SuperscriptBox["\[Xi]2", "2"]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["\[Xi]3", "2"]}], "144"], "+", 
  RowBox[{
   FractionBox["1", "48"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[Xi]3", "+", 
      SuperscriptBox["\[Psi]", "\[Prime]",
       MultilineFunction->None]}], ")"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.675263396804562*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    SuperscriptBox["\[Psi]", "\[Prime]",
     MultilineFunction->None], ")"}], "2"], "32"]], "Output",
 CellChangeTimes->{3.6752633968240843`*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    SuperscriptBox["\[Psi]", "\[Prime]",
     MultilineFunction->None], ")"}], "2"], "32"]], "Output",
 CellChangeTimes->{3.675263396827124*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(*--Simulations--*)", "Section"],

Cell[CellGroupData[{

Cell["(*--The Different Gaits--*)", "Subsection"],

Cell[CellGroupData[{

Cell["(*--Forward Gait--*)", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["\[Psi]", "_"], " ", "=", " ", "0"}], ";", " ", 
   RowBox[{
    OverscriptBox["\[Psi]", "~"], " ", "=", " ", "\[Pi]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTau]", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"\[Epsilon]", "/", "\[Omega]"}]}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"6.3", ",", " ", 
   RowBox[{"2", "\[Pi]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.675264635964468*^9, 3.6752646425800457`*^9}}],

Cell[BoxData["0.01681469282041359`"], "Output",
 CellChangeTimes->{3.6752646433625526`*^9, 3.6752646753948917`*^9, 
  3.675266136930141*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v1", "[", "t_", "]"}], " ", ":=", "   ", 
   RowBox[{
    OverscriptBox["\[Psi]", "_"], " ", "+", " ", 
    RowBox[{
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"t", ",", " ", 
          RowBox[{"2", "\[Pi]"}]}], "]"}], "\[LessEqual]", " ", "\[Pi]"}], 
       " ", ",", " ", "1", ",", " ", "0"}], "]"}], " ", 
     OverscriptBox["\[Psi]", "~"], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v2", "[", "t_", "]"}], " ", ":=", "  ", 
   RowBox[{
    OverscriptBox["\[Psi]", "_"], " ", "+", " ", 
    RowBox[{
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"t", ",", " ", 
          RowBox[{"2", "\[Pi]"}]}], "]"}], "\[LessEqual]", "  ", "\[Pi]"}], 
       " ", ",", " ", "0", ",", " ", "1"}], "]"}], " ", 
     OverscriptBox["\[Psi]", "~"], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v1", "[", "t", "]"}], ",", " ", 
      RowBox[{"v2", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "}"}]}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xover", " ", "=", " ", 
   RowBox[{"\[CapitalTau]", "/", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6752641801830397`*^9, 3.675264185783887*^9}, {
  3.675264664273836*^9, 3.675264669594411*^9}, {3.675266150758877*^9, 
  3.675266162524437*^9}, {3.675266225416603*^9, 3.6752662374651957`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
L7Sigoo=
     "]]}, 
   {RGBColor[0, 1, 1], LineBox[CompressedData["
1:eJxF13k4VVsbAHDTOWdvxDl7H8NJCHG7UlJoQN7cMpYyFWVKSJpE6RriXkSl
VBpJSDpoJDNlr5RCQhEZk6QiMpSU6dvf83zfsf/Zz+959rP3Wu961/uureJx
wNZLREhISE1YSOi/d1FKvPaD3r9rhP53qX8pM1A672b8f//O1vZsiT8g8Eeu
z3hBfLjAraZR5Tfjzwj8xi3+j2vxKQLb7uW1Xom/L/C5EefcS/GUwAYVluIm
AfUC+wVb78j1eyvwviKvOBG1LoEbP1vgGR49Ap/UHhMqcPos8MFFlRfRza+z
49+5517H/iGBPR5t2XzWe0TgncONCB3/LvCppYUH+NFjAougwhVRweMCczSt
at9d+S2weYrJjaH4SYHlvtWYhhdOC5z4vERYdLcQ/N+Gimtn5nsKC7yoi91z
9JCIwHczCZ98f1GBQztdGhZFiwl80HClVfIFhsC/U9Z59J9lClzvl+h+JI0l
sOZZ9sQh/qwj70df9L81a/1B/+p9D2Z9bY+Vrmf5rH29J1k23bMWc3a9r6mK
Cewa0mixUGPWhYmWPeqas/Zt0eepLJv1qy3SkXIms062QVvEPGa9ykx1uuP6
rHVvVB9/fnPWS2b8yZysWasWPlkYlTNriT+87DQfz7qDmZkZ2DXrtx6bl7v3
zPp12fgji8+zfhZo0TBvaNb3e/umymdm/e+zxXbSyrjAoapNHeOqOAT4Nr+R
7XGkAsPCfLo1cIhJNx7ufhlG+bVqjL7QxEFH8tQu55xYyle/7mj+Ehy8wyO2
d02dpzzjj2Apy3BIeWVeOkctkXIdVD5/XB8HrG7/vrkLUik7vl/m9jU4DISb
GupZ8Cn16NypDBcc1u15ZGy+v5CqWr8qE5JwcHZe2+g0/Zz6+3nYkvBUHEYn
rKusGiqphRZP8x6l4xCme/mxfmYVFb1h0+PVd3GYEVWrGbN5Qa2z82rVLcOh
PudeqfzNWgq5n5P8swsHCyvt+ub011RhyBc/zgJxGDkXFfjX+hbqZk7Cqu7b
4pBmuz790IoPlIyalq9rlgRs/BA9EwbfqNfCWATvoSSYjhX1S3b9oPKxAH59
1RxYQERgA6kTlJYM29ejQgocou8v9TQXQt/ixrjLm6Qh6kr/dZ97IujrkFL5
4lZpWHeoV/1JgQjqszU7sLBTGrSdkjAeJYJ6ZK9UKfZKw+e03+8L6kRQa/Kq
MGxMGgrtJG6XDIkgj61lo4PibJj6caW2S0cUbdwl7PJUkw0nDC44JWSLIrWY
GO0DvmyYGd/ttClFDPk36YZ57GVDrK+eijVfDCH17hqH/WzQe6MmZH5XDLk+
NfQ19GdDh33lpFapGEoUHknHg9ngibAnpU1iiAh1npt+gg3VlzHZfkkGEjmo
w2jJZIODp3HWscMMZIM67WpusWHcJUGvJ4SBUqVPpVF32FCywJpvFMFAa+71
GvOz2ZB3hFryPo6BgvuvBgcUsWHecGVOXwYDjXgxh+ZUsuGoY6Eus4WBure1
tZp8YkOp/RW2wwomkjTamuH+hQ0bE7qyTxgxkZ5yQ0BYPxsGddbLFf3FRMc/
VEuWfGODsmaQtshmJtLeW7JGZ5wNufHRLlY+TBR6NCFNGeeAWUC1XvZlJpJJ
3eo7qckBTpqWe9EwE62JaNCfu5gDg7xnsao/mcjHc5PoSm0OiNRHW0RPMtHD
hWZJAcs5sIkKPLyaxUIeOfq1fQYcsFL+y8thHgvdK5dZ1rKBAyf/YTvbr2ch
848Nv/L3c+AFn1G+N56Fji6KC7nvxwHb00WlhZdY6MFB86lMfw5Y61b/mExk
IYXph0JJgRxQDHuvEXiDhQZl+ayIMA7svsV1V8tjoQvmf8tYx3HgV3HdBp9G
Fuq6PU+n9y4Hzl2ttrrIxpDMSNODd/c5IPT5oI8GF0OWK8/ptuRw4Mi1Xn6O
HIZynzJW1uRzQNSm4liBEoaiOwbXPHjEAVevyNwgLQxpST/eEPaSA3aOpMxH
Uwz97e/lIzvAgbR/Lu+1PIKh41aDu1Z/o+fD8HmyLRhDlxcc2eU6zIHHfybI
eR7FUEHTcW/+Dw6QTel5OyIxNLr6jqf+NAf4wjFZ2BkM7Rcddd8iTUCVqcEz
sZsYOtoe4h7MIWDjqMqZ9AwMncoXc08mCVD56GdudAtDt3fJuvXKEeCgtvmE
030MfX6xyiVwPgEpfz7WNirG0M4L/zhd0iHA4lhoQPYLDPnvw51KlhPQs4c3
2PkSQxGm8Y6degRYvltkzazHUOr4ja0aqwlQbzB4aNyIoU7n5w4FJgSoUSbG
Lu0YGtDb7NC6joCIlKJG204MTUq12E+bEuD5csBybReGFB732ZlaEeBzZ0cz
1oMhR3Up2yY7Avom/XeY9GPIZ/qSzW8HAmqOvx2Y/oqhI83KNkqOBITfqdqS
N4ihSyd0Nns7ExDyYPtDfARDDQP21mOeBBxiSla5jmPIuuCqpWwgAf6vqGM5
ojjyGfWYkfmbAOpGsFCvGI4il2rmyQQTEBPw2oDLxFHRrSJFmTACDhRpjbpg
OFJNeTNERhPw/ecdZ74kjgzbk26Sxwng9Xs1Zs7B0Vae5zbyJD2eF7HiN6Vw
dOr8yBMijoDpn2o5J9k4GouRvsy5RMCpabH34lwcsSuarDhXCLr+Jqxvo71I
JFmIk0iAWXat900ZHLmHavmykwmo3mfXqSGHo+DiUSV2KgEl6Sa6nbQvjpU0
SKcR8HUpYXpGHkfVfhZG0nw6XhNpSZ08HPXcZY9IZRKQf5T9PnQujmb6mvlS
twh43VrQxVXAka6XN1vqHh3PHjnOsnk4sk5bXDEnm4CobbFrC2nvfvc9aM4D
ArYYZWnpK+Io2Snyg2QBAS4yu5apKNHxuWR5RbKIAO9tNRtO025o4GyULCHA
+I63yijtQXaLsORD2tfmZdsq4wizTi2QKCOgdHPT+G3aqrG79kggArghRyem
aRtVLpkvUU7Pb8dUodV8HDkyxhrFnxKg02ayJJ62v8mjE+LPCCA2Gbq+pn0q
PGqNeCUBcgUtZpIqOMp4aDWKVxOgkCjZb0y7/BeRidfQlq0020e7Xb/VGa8l
wKhJyPUC7bGA6xy8no6H3N3F+bQ5OT7PsNcEOGU9LaijrTWoHYI1EnC0D359
oG266Kc21kSAUs28H8O03X3KelhvCbCqt7/1i3bIzWMJrFYCzMU/yU/QvtS9
wZrVTsBJpQYYo52tzBVlddLzN5mr2k+72rmtkNlFQLER9bCF9seEtL3MbgLi
dz1jl9MWat6twuwh4ESWnlI67blcnSZGLwHSYdyP4bR1bcZPMj4T8Hhoj5cD
7U1xlDGjj4C9yaYpC2j7voj+LvaVANH87PgBOl5RmHWW2CABaaOFxtm0k9fL
uIoNERB5aw9/L+3iiHZCbIQAsdL2Z6q0Byd9Q0XHCHjzl4leKL0+To5Wf/76
SUDoyO+dKrSf5i5qGvxF5/cnhVhEr3eC71ft1ikCpGR+lH+l80XsWU173Qz9
fpWuhiDa+1XunqgQJuG8UkKHEO11b/d9yGaQ0BTW1zZJ5+P95dZn+SwSeJaP
6w/SnntmiVESTgKzqbusi87fofXfLsXMIcH0S3zMHTq/r+b6WbrKkCAh8ap2
QhZHTGmbn3ZyJLCrFOOBtp+vTroFj4Qx2++bwun9ZKoyMqWrSMK6579K+0gc
jcQF5Eiok9DMaNwWRO9Plz47V+E/SLj+9vXP09I4qlyvK/FzIQkVQj/PJtH7
+drkd89uLRJWRV8pyqD3v7lvoHyxLv38neEPh+n6kFuxpeKePgnBDuU+21g4
UlJZ4Z++koQik+z+lXQ9GW3++eKMIQmlFhNfP4j+N/5B4d7rSKh1Nvk4PI0h
/LqTlrMpCfY7P3nwpzB0aHJVi405CUk9U132kxiyyP29zGgDCRvqn75L+YWh
7/NDe0l7EgaWDg8NjGLILdT5PL6FhMoO6xB/uv5VNxvCzFYSNrnVYsNDGEqJ
m0ro207Ccjf+kvYBun9Nhm18vJOEfQbLs30/Yeh68795+wNI8HMz+uDTgqHe
iqXv4g6TsN2mz9Krme5fee/w+0fo8Xrn3tv2hu5HZ43cvoWQoGPdt3fpKwzV
WPzC/aJISNA81RhTiaHxUj+3gxdJkNTTaO/Nx9CaW8onz10mAfOW2xSQi6HI
K7V5OQkkGLlYVY5nY0jqsJb4yDUSvjpa1g/expDaks95/nwSXrUUW8Zcp+t3
qpv4oUISIrpDz/rGYuhCnJTehWISgiJ6qZjjGGoJfeSWV0qCYXWOcPIxDHk6
KeR/p0iIySqm8sMxFEQ0ux2uJOHiccIoPgBD6VHW+YEtJNxYc2BmxglDv32M
3IMmSLgjslgxX4WOT6kmHJ4ioWytR5g+3c+vzpGff3CGhPkjdUM5czFk+GDk
nY8oF27r1UheJjEUNpHh5ijBBeNXnavmMjAkGke4rVDgAvNNrw7jEwtJ5n5y
+bGaC0ZBB3To/yjkzHhjNGzIhQkv8chVaSx0d2u54sAaLvziu4j9usZC1pNJ
HT0mXPiY4JLofZGFzq63dWm05ALs9taZjGQh7tuHzrnbuHD+9o4pjjsLKU6d
234wmAsaH258/EbS56PujcWXQ7lQNfpI9rwUCx16jsuVhXHh0+Enydo4C1Wf
+/e1eCQXdt6rKbafZqJAjYMW6bFcyEvsNdv0mYnqN21e0ZzEBfl5Y5qsUiaK
SJMijSguxOx245/ezkS9ZrHVmJgMGN2S2et4goE8rNznqzNlIGt4cFc4fR7t
sNYLXIvJgB8v3juVPq82OrxTCZaUgevVnQH1+xiofOfyoH6uDAwpnRL7YsNA
18Lb/qhVl4EzUUG5U/IMZF+46Nh5Mxm4+2PK7EmaGHqiUWOsFCsDe9Unr+re
FEW+GF9MBZeFxCdfPiXGC6PC1AVGT87JwtuWf/5xnDNN1RoYVthy5CChZeyi
Yv04Ne571c49Tg7GDHcfOb1xlKrcnOIwR1YekoUf+BgK91EeqwwzMi7IAyNZ
YsQ+q43aPfDyR/sleTi7vyPazaCN8rvuto5IkAf3U3jdjpetVDge+T70mjwU
eZ6Y2TjcQiW1VCnY8uUBZbmcqlz5lmoK2np2slAeRJ9nFOx81khZlvgH2bTJ
w90KvZMGJS8om/1ildEd8mC0WLuCaq+mHFUvyT58R38vzKneYKaK2nWyOFej
Rx7WrLb2mreukoraJjQ48VUeXB2ufI1++ZQq+33agz8tDxU7RBWDykqpinvK
OW1CPLD/KD1QIlJC1XjkzLBFeSBnQtV9Ny2i2qobk0JYPNA/yeyzrcujxhMV
mjezefDnHqeQOOo2NWN9Vz2a4AFx27s92yyTYooaHyrl8kDh47zmF3XpFHeP
B0eDx4M9o20Z76irlILyd7ftCjwg3aN6f9RdoFQbjt07q8gDqKlIlECxlGaM
3FSFMg/++NHWux6FUDoGWVYTKjx4kZDq9xi7WvYfWrRnwg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.141592211294924, 3.14159227097903}}, {{
     0, 6.283185307179586}, {-3.141592211294924, 3.14159227097903}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.675263405893271*^9, 3.675264091036969*^9, {3.67526418183753*^9, 
   3.675264186457513*^9}, 3.67526467057261*^9, 3.675266137103197*^9, 
   3.675266239892983*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(*--Rotate Gait--*)", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["\[Psi]", "_"], " ", "=", " ", "\[Pi]"}], ";", " ", 
   RowBox[{
    OverscriptBox["\[Psi]", "~"], " ", "=", " ", 
    RowBox[{"-", "\[Pi]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", " ", 
   FractionBox["1", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTau]", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"\[Epsilon]", "/", "\[Omega]"}]}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    OverscriptBox["\[Psi]", "_"], " ", "+", " ", 
    RowBox[{
     OverscriptBox["\[Psi]", "~"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v1", "[", "t_", "]"}], " ", ":=", "   ", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "\[LessEqual]", " ", "\[Pi]"}], " ",
       ",", " ", "1", ",", " ", "0"}], "]"}], "   ", 
    RowBox[{"(", " ", 
     RowBox[{
      OverscriptBox["\[Psi]", "_"], " ", "+", 
      RowBox[{
       OverscriptBox["\[Psi]", "~"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v2", "[", "t_", "]"}], " ", ":=", "   ", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "\[LessEqual]", "  ", "\[Pi]"}], 
      " ", ",", " ", "0", ",", " ", "1"}], "]"}], "  ", 
    RowBox[{"(", " ", 
     RowBox[{
      OverscriptBox["\[Psi]", "_"], " ", "+", " ", 
      RowBox[{
       OverscriptBox["\[Psi]", "~"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "t"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v1", "[", "t", "]"}], ",", " ", 
      RowBox[{"v2", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "}"}]}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xover", " ", "=", " ", 
   RowBox[{"\[CapitalTau]", "/", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.675265938810224*^9, 3.675265985573761*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
hv8H1UWZPA==
     "]]}, 
   {RGBColor[0, 1, 1], LineBox[CompressedData["
1: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
W/t/AK34UuA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi}, {0., 6.283183776736628}}, {{0, 6.283185307179586}, {0., 
     6.283183776736628}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.675263406009508*^9, 3.67526543196607*^9, 
  3.675265950936804*^9, 3.675265986794804*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(*--Forward Gait withTurning--*)", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["\[Psi]", "_"], " ", "=", " ", 
    RowBox[{"\[Pi]", "/", "4"}]}], ";", " ", 
   RowBox[{
    OverscriptBox["\[Psi]", "~"], " ", "=", " ", "\[Pi]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", " ", 
   FractionBox["1", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTau]", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"\[Epsilon]", "/", "\[Omega]"}]}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xover", "=", 
  RowBox[{"t", " ", "/.", 
   RowBox[{"FindRoot", "[", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{
       OverscriptBox["\[Psi]", "_"], "+", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "-", " ", 
         RowBox[{"ArcSin", "[", " ", 
          OverscriptBox["\[Psi]", "_"], "]"}]}], "]"}]}], "==", " ", "0"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", " ", "+", " ", 
         RowBox[{"ArcSin", "[", 
          OverscriptBox["\[Psi]", "_"], "]"}]}], ")"}], ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v1", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Which", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", " ", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "\[LessEqual]", " ", "xover"}], ",",
       " ", "1", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", "  ", 
       RowBox[{"2", "\[Pi]"}]}], ",", " ", "0"}], "]"}], "   ", 
    OverscriptBox["\[Psi]", "~"], 
    RowBox[{"(", " ", 
     RowBox[{
      OverscriptBox["\[Psi]", "_"], "+", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", "-", " ", 
        RowBox[{"ArcSin", "[", " ", 
         OverscriptBox["\[Psi]", "_"], "]"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v2", "[", "t_", "]"}], " ", ":=", "  ", 
   RowBox[{
    RowBox[{"Which", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "\[LessEqual]", "  ", "xover"}], 
      " ", ",", " ", "0", ",", "  ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "\[LessEqual]", "  ", 
       RowBox[{"2", "\[Pi]"}]}], ",", " ", "1"}], "]"}], "   ", 
    OverscriptBox["\[Psi]", "~"], 
    RowBox[{"(", " ", 
     RowBox[{
      OverscriptBox["\[Psi]", "_"], "+", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", "-", " ", 
        RowBox[{"ArcSin", "[", " ", 
         OverscriptBox["\[Psi]", "_"], "]"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v1", "[", "t", "]"}], ",", " ", 
      RowBox[{"v2", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "}"}]}]}], "]"}], 
  " "}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData["4.9482708751228195`"], "Output",
 CellChangeTimes->{3.675262298952675*^9, 3.6752634060803423`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 1, 1], LineBox[CompressedData["
1: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
+f8Atdo+VA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.6741911838436194, 5.6089921562605705`}}, {{
     0, 6.283185307179586}, {-0.6741911838436194, 5.6089921562605705`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.675262298952675*^9, 3.675263406113471*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(*--Sideways Gait--*)", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["\[Psi]", "_"], " ", "=", " ", "0"}], ";", " ", 
   RowBox[{
    OverscriptBox["\[Psi]", "~"], " ", "=", " ", "\[Pi]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", " ", 
   FractionBox["1", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTau]", " ", "=", " ", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"\[Epsilon]", " ", "/", " ", "\[Omega]"}]}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v1", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Which", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", "  ", 
       FractionBox["\[Pi]", "2"]}], " ", ",", " ", "1", ",", " ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", "  ", 
       "\[Pi]"}], ",", " ", "0", ",", " ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", " ", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"]}], ",", 
      RowBox[{"-", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", " ", 
       RowBox[{"2", " ", "\[Pi]"}]}], ",", " ", "0"}], "]"}], "  ", "*", "  ", 
    OverscriptBox["\[Psi]", "~"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v2", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Which", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", "  ", 
       FractionBox["\[Pi]", "2"]}], " ", ",", " ", "0", ",", "  ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "\[LessEqual]", "  ", "\[Pi]"}], 
      ",", " ", "1", ",", "  ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "\[LessEqual]", " ", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"]}], ",", "0", ",", " ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", " ", 
       RowBox[{"2", " ", "\[Pi]"}]}], ",", " ", 
      RowBox[{"-", "1"}]}], "]"}], "  ", "*", "  ", 
    OverscriptBox["\[Psi]", "~"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v1", "[", "t", "]"}], ",", " ", 
      RowBox[{"v2", "[", "t", "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], "}"}]}]}], "]"}], 
  " "}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxF13k0Fl/cAHD7M2N5NkuiEIrQJqWk7jdtQhQVqSShkpAWsrUJUX6SJSq0
kD1kyzbToiRFyBaye+xr1vA+7znv65l/5nzOnXPmu9w7c+8KK0djGx4uLq55
bi6u/73zEoI/2jfd2rEko8rxPZa0Y2VP0TaZR6eQ2+pKg8tlfmgmbZ11fbAj
emJ8aPWGsseoU+zcVHbwDbTGX7G+81s8atjr/SE2+D/EO7RMa8m3XPTrVLDS
s+Bo5BakoS5cUoKM7Zc2PA5+g5682DoynV+HHo6eeBsWTKBCF8rEnwAW2las
J6hzuQLxXzzoeSNnCtGr48o1H1WgDz/nBla3T6GONp7QNW8rkPP8+YB86jQK
5MqXXTpWgZSCyKhHNtOobZvqpmHnn+iLdbo9kzmD/DKELKOcK9F0naTiSttZ
VBNdljVzqRqFuOTau07PoaRUZffhh9UoUip4W/aKeXSz0Bu60qvRAYep2V/7
59Hq39rffo5Uo++tTul5EfPIQyKlJf7SL/TYuT5UbMsCUnjwQMj0Ug1akcca
uqzJBU5uhqffOtWhgGWKvQunuUHPQTseC6pDNTJm0YWXuUHBSmXo5Js65J4t
EWF3lxtq9gt4YoN1SMneTSI4nhu2Ly16fPJCPbIsP2wlPsgNgrlrKii2DejQ
iUqi+SoPxP4VRieON6KYIFURYVde8OqZuZvu1oiurOktCvblBbMmVplAZCPa
TjHMEQjnBeHiT+bpdY2ItqsasrN4wTnE45rA0SZ0gnltmfooL8DG/pS0g81o
9yvCIugsH1zMtQnkUWhB7ttfKfjs4oe1+w/JcWu0IMHYMvWsQ/wwXK+dsbC7
BcnLftYoO8UPV2ZFa/7ZtiDuwxk/0935wW3Hh+WTiS1ojxHj3bEMfvD5JJPS
p96K5k1UO6nSAqB7RBD17mpFh1NZPVlKAoB3/a1gHW5FegL48C4NAbhP+T7e
ea0VJap1fxE7IACP9Ny1W/Ja0elvbnJ+ngIQU1H7rVqnDcUFP41NqBcAq9Mf
T1aZtKGzzBXH8zoEQGE0deindRu6612qnT4kAHGiPqLlPm0od2KtySF+CqQc
1Tj+tbQNSdRLXD+2jgJ5jUG9hcbtyGwk2emGFwU8Lnp4FJxpR/tmTp8Y8KXA
9vmz1Pwr7ajXUaYAHlKAlEXquWHtSGF7dkr4Swp8sRq4ntHQjiwH12nxf6FA
NWs//tqqA2FypadrMAyGIpT33HHuQLe75PVE6RgI6lNunbrdgWxNfR5sWYIB
pHyaWvKiA31OcMC1V2KQdAmx/Fo7kLhmt8QqwOCzvIyizUgHesEtLhm7F4OW
qn+ndnJ3oqUhqTuED2AgsTmvdlquE9GGGe3BxzC4PaPxxc6yE/G2bW6+eQmD
Z0mivPucOtENi4JT4IJB7onRHQo3O9Gu/N6abg8MBoreZP+O7kSxAXJBg74Y
mN1RiTP404nCJ9UfNzzF4LIG3qY81IkMU56ur3+OQWBn93L+hU7UyagOIeIw
+LQvNrRQpgtxWd9K2ZWGwTphubtrLbpQ0tW2KOUPGOgVzpOCDl1oQ6CsmM1n
DKwdmv51eXYhG/mdG+6VYhBZEXkl+lkXSvnLY+JXiYFAqLg1vakLaUq6lJxu
xWDF3vHo/v4u5Ou9iv67AwPtycrfJf+6UCZe1rqNhcGlY0Emt5Z1o2j9UvHM
QQwalwvtGj3ejeIDH5z3msFg8keP148L3Sj2KkrYOIcB82ZJXqJ7N1q/fda8
YgED3ba76meedKNlB6wFST4czjyydkBJ3ejqH01eUQoOXrt3JUrndyOhvtPW
B3Ac3sZxyVc3dKOx9zRTVxEcfpj+OZnW243WKrt3nKPhwMKKIu7PdCOPncKV
wMCBN+/pr3OCLCR7ZGw5lygOMhfcGXukWMi82fVznBgOW5eZH1ihwkIrA+e+
akjgcPj7lntzW1noo8HMqsQlOPivm+DKPsZCw5m53XpSOLi57FftsmOhO2p/
tQKlcThPPD0i4cFC930fh2Quw8GMMnxj7wMWeipuNFa4HAddo12J16JYaCi8
60iiDA5bwsOq496wULmOYf51WRyU//TM15AsVFEUJq8mh4Ok0vbVlEoW+r16
1P892xTHIBPNdhZSkcwc27oCh4nsds+z4yzEFXroRCjbXfOb48P5e5CpwulP
VWzX7PWv/CLRg4yKIlX/sv05sOnfpFIP8quvfTjNdnbNeiXlrT1I77ToZAvb
sTLeh8z0elBQ3vnjSWyH2Na6+x3vQa0fJAkztr1TVeJy7XuQcMUN+R52PFcm
PCtYnj2o4I2szwm2z+z4OSP5Xw9qjovszWDnY+yjuHJ/TA/qc8o82M/OV+eH
i9H19B7Ei4zfYWyrS3y7nvChB3Vmu63E2PWRt5B5VV/Vg96PHAnrZdeTGXfp
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
r7qbGrScYxXfJXPFshxv2JagP7uC4/8BB7EuzQ==
     "]]}, 
   {RGBColor[0, 1, 1], LineBox[CompressedData["
1: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
7f8Bk9QrMQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, 2 Pi}, {-3.1415906588356988`, 3.141591603756298}}, {{
     0, 6.283185307179586}, {-3.1415906588356988`, 3.141591603756298}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.675263406312467*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["(*--Simulation proper--*)", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t0", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t1", " ", "=", " ", 
   RowBox[{"2", "\[CapitalTau]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6752644793931503`*^9, 3.675264479845585*^9}, {
   3.6752645275513477`*^9, 3.6752645279383574`*^9}, {3.675264609968709*^9, 
   3.675264622207593*^9}, 3.675264701780959*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalA]", "[", "tt_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"v1", "[", "tt", "]"}], " ", "r\[ScriptCapitalA]"}], " ", "+", 
    " ", 
    RowBox[{
     RowBox[{"v2", "[", "tt", "]"}], " ", "l\[ScriptCapitalA]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", " ", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"gLocal", "[", 
       RowBox[{"\[ScriptCapitalA]", "[", 
        FractionBox[
         RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "\[CapitalTau]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "dimG"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6752647134749613`*^9, 3.675264714076509*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF0GtIk3EUBvDXbdiUim3N2VpzbtNZKlhE1NhME9NSEl1000p71Zqztnmh
0gypbIaWbW8mXlsWTiW0xHRlpiMZqZhJmqLLNNMyykthsrxWkOd/4OHh9+3h
8HGVLJaEYdj+v/nX5Gb7zk/bdbuw/+f6tUnidFvls+K5x14x/UQ6eIwpt9YT
t8ADARkvywg9+F0k4VZCPALLzrAH8olmsO7nsdo84g1YYg6y90saBqtTQ07W
qsfBZ5/G5pCE0+Ce8X125fgMOMtrFqs/agUneLTeMZUtoP3R8dWDSsx3xfiL
Q6HaUyRw9I8ek+k6BXxji1Fl0NiCSSbjjoxUKpjuHtw5lG8P3qv3ezBNrAY7
TnUEpBvXggtfNdiQ42hgKXf3snMMHewxTBu9lMwAV1Uw5HWJ68BpH453e2iY
4ATpzuC7uQ7gOb0//k3LAnepC6PO33cEiwMFS4Ol68Fte8QVvsVscFlNgXjk
4Qawg9BTcaKSA35rQ73CbtwIrqMmGbrauGBPB5oCNzuBp3Jmmdt6eWBhZqaX
SuEMHgm3DPh9Qd471v27TskHX0iMlbMmkEPqi4JY5wTgyQVFGnkWubTv8hNl
khD9Q+4dlTKPzF3URSSkuoA/B2a3Uymu4BZRh49TNrKCaqDw7URg4z0X7xYd
cqdEapbR3cBWRdGBqBzk1lD9wTWsTWBcLC0vz0WOm3j9630esro00p9RgJxu
d/VjWglycX8bR2ZA7k05rF0wIgc1JKaEWZDDlJRWzSDyEUEeq3EI+XTWs1rR
KHJGODY5/x25ae4mblhCNlfzaizYZnAHXrNMIyNb2nuKL65CthZy+kJpyMsh
Va4aBrIt2Sf5OROZGY/TRWxkDm8mMoKDLOi+Vq3lIrtnOi6aechbJZXB83zk
PytKC84=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Method->{},
    PlotRange->
     NCache[{{0, 4 Pi}, {-1., 1.}}, {{0, 12.566370614359172`}, {-1., 1.}}],
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
8cZn3UH4n+sufZcBGRCXcrjRGXYKW2tnarYPy4BHZFBLu/JJfB60vU1hXAbe
G71uT/EIwNLB7wv1/2Sg+da0wqM+Tyw0vRFTxCsLQqJabZ/Uj+C9jI3iKXyy
4L321I5RX1dMtb+q4SUiC9PN7Cn2z/2YWGHAtBWXhYeh9a0hwXvx6oqPm4yl
ZSE629zIgccao7wvNdHlZcH4/bx4huQWjHi+ao8IVRbEEykHc3avxlBax8cZ
mix8OT6oLKEshUHnzh3tY8hCSOyYav7hjXi8m/H7pRZ5PVQoOvWOBXqvfRvG
1pGFyzrTlbRnu9E9MZg/c40sbC/I1D66cR8eHKXeiFkrC+bDg543y51wT97x
/AMmshBxQp3x9o0bWvPI6m81lYUdaw48Ycd6oMXBJzU622Sh8rrm6ygzLzSW
orRxW8tCsEVJw8eHfkiPYi7cdybvv/9a+Mq7k/hi6/p8SJeFn9dCXqhaXsLT
jed0wrNkYe6R7GGXZVGosb2BVXNPFtTUXmhH1kdh1A6bJxuKyc+7ryd2bkMM
mu050m1QS45/W/p3Vc0rWOeSIKTZKwvfB0/cJM7HY+XZb8fF1ORA9u/ZVT0W
KZhbnra+74EcsJKYwUYNWej994DWf6Vy8D7u3mG9n1m4equS/BumHFQfVWTK
Sd3Fx/9lzz98JAcii2Y/qj3vYtu/B5jwUg6OfzzksEowG7mta7duHpGDDR+O
7Ku0ykHn7327s7TkwVZtMWNnXS5Kqmp7HyyQh8DuwX49z0KMJ6mgoFgezG90
b3x3rRAFeUZMJ8vlYTete3E3qxC5vhTIX66Wh5aUOok/XA/wR4b6a/ZLebhj
sau0OfUBNsiprhYelYevlNTrAfVFeJIiN/1ojQJwhX1emTxfgmMRZ/qWGSnA
fEFFwwpqKXpP/Pdm90YFCIieueS+uRRdWm7eH9qiAH4ZXf05l0pxR5zkfnE7
BZDpnf+ydlkZqgqKPfYOVoDZswbaUbFl2MrNf0H2sQJMhO/pr4wox9HitIO7
6hTgck29xc74chRwXLkxukEBHnoa6r7NKEeosJ6cfKUAfypaTFIflWOJa7JH
y0cFePpg74NNk+V45SnNKvqfAkyVH5NsOlyBZpc2SUyZKsITYYfcwFVMdNF7
O77SXBHc4qZzQ9Yz8exHl9euVorw7FuOzbGtTKwwjIxq2aMIm9ev9aI4k/4z
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
PwAGlQE=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Method->{},
    PlotRange->
     NCache[{{0, 4 Pi}, {-0.08726643343767494, 0.}}, {{
       0, 12.566370614359172`}, {-0.08726643343767494, 0.}}],
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Ach2zvc=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Method->{},
    PlotRange->
     NCache[{{0, 4 Pi}, {-0.5235986006260496, 0.523598443139283}}, {{
       0, 12.566370614359172`}, {-0.5235986006260496, 0.523598443139283}}],
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.675263406533593*^9, 3.675264100238226*^9, 3.675264222722883*^9, 
   3.675264481676241*^9, 3.675264546133112*^9, {3.6752646128400917`*^9, 
   3.6752646243016987`*^9}, {3.675264704418743*^9, 3.67526471503325*^9}, 
   3.6752654358225393`*^9, 3.6752658537829657`*^9, 3.675265993580797*^9, 
   3.675266141953198*^9, 3.675266243079669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gsol", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"\[ScriptCapitalA]", "[", " ", 
      FractionBox[
       RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}]}], " ", ",", " ", 
    
    RowBox[{"oInit", "[", 
     RowBox[{"G", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", "g", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "t0", ",", " ", "t1"}], "}"}], ",", " ", 
    RowBox[{"MaxSteps", " ", "\[Rule]", " ", "10000"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rft", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"v1", "[", "tt", "]"}], " ", "+", " ", 
        RowBox[{"v2", "[", "tt", "]"}]}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"tt", ",", "0", ",", 
         RowBox[{"Mod", "[", 
          RowBox[{"t", ",", " ", "\[CapitalTau]"}], "]"}]}], "}"}]}], "]"}], 
     " ", ",", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"v1", "[", "t", "]"}], " ", "\[NotEqual]", " ", "0"}], ",", 
       " ", "1", ",", "0"}], "]"}], ",", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"v2", "[", "t", "]"}], " ", "\[NotEqual]", " ", "0"}], ",", 
       " ", "1", ",", " ", "0"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gft", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"gLocal", "[", "g", "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", "t", "]"}], " ", "/.", " ", 
       "gsol"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"gDim", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qft", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Join", "[", " ", 
    RowBox[{
     RowBox[{"rft", "[", 
      FractionBox[
       RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}], ",", " ", 
     RowBox[{"gft", "[", "t", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gdes", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"oInit", "[", 
    RowBox[{"G", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "12.566370614359172`"}], "}"}], "}"}], 
        ",", "\<\"<>\"\>"}], "]"}],
      False,
      Editable->False]}], ",", 
    RowBox[{"y", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "12.566370614359172`"}], "}"}], "}"}], 
        ",", "\<\"<>\"\>"}], "]"}],
      False,
      Editable->False]}], ",", 
    RowBox[{"\[Theta]", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "12.566370614359172`"}], "}"}], "}"}], 
        ",", "\<\"<>\"\>"}], "]"}],
      False,
      Editable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.67526340691636*^9, 3.675263493757773*^9, 
  3.675264485996861*^9, 3.675266009307371*^9, 3.67526614206942*^9, 
  3.6752662444221563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "t0", ",", " ", "t1"}], "}"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"gft", "[", "t", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "t0", ",", " ", "t1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"v1", "[", 
          FractionBox[
           RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}], "+", 
         RowBox[{"v2", "[", 
          FractionBox[
           RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}]}], ",", "t"}],
        "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t0", ",", " ", "t1"}], "}"}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"rft", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "t0", ",", " ", "t1"}], "}"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.675266047015781*^9, 3.675266076103479*^9}, {
  3.675266123268303*^9, 3.6752661248575*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxd13k8lN/7P3BatJJU1oiSNkopZJlXJC2yhIqIhOxLIukthFKRIsqeXUmI
bJF97OuMsYWYFLJWtKj0PfP5/febP2Yez8f9mHOf+9zXuc51iV100rVcxMbG
9p58sX7//8+E9TPu8Py7yvbssmHCH1Io3Pu/XOjvK1FWYKvoRh2VIpFQuOlX
/XtlA409oqn/dVN8Cv6GWWn/VM5ebjp+peIjZWaTV/oeqQ0U/tLVheYLM5SH
vJZJo/92UArvsTX0uv+kGH+8kzmdKE8RcaOGP0hlg4hGCNsmQTWKztRpR/6y
pZhpKUue7tGkfMt+NRVwaxXW/xsZcq3Tp/ib2K+a/sMNi4nBzNtPjSjH7lpe
4Qxej50rvVV+8F2kZNQ/j+W7yo+POjLXX3ZaUfoV3NTY8zbiDvulCg4uJ8qz
KztELFNEsTw4MJD9/RWKv1WCapHQFhxaUlX0bv4aRVpNzs3z7Vb8e+P5KVbN
m6LjbKyQem87LjHsd6k6+VEeTi1myPjtQteY/a2jwwGUr6VSR7am7UZXFIXd
lP0+5e2M/RHl39JYeetw1SenEEqCzJKmJ4X7sC62en1JXxgl5aZaSGzgfiQ/
f7pcry6C8izE4pKWqywqvXZpvN4XS6H1LxxPd5GH4I5bgzqCCRS1e3fx8rYC
7mTUbC74kkTZ8mdpt162EjKOn5sI2pRGcZZxXRc3TYH0SwOJ9SnplOxDQ9VH
Eg/hWScX81B4JkVCdBdnYJcKnulUqB387xWF4z2zN5bvMIzO3zEfvJ1PcdYb
K9xVeARnspRGd9sUUSJfBNgn8x/F6SgZz9aHJZTi6tHrn/yOIaL1fuhlZgVl
xD7yQ9l1DYRphIgzJ6soHD+q3ulxaOJa38/QRRI1lE7xmrT0GC1QJn80fBJv
pKxj97nTPKsDS54tO81nmilxkU8b+dtOoXWv0sV319oo/lcS3SuzdXHKJmu7
Whudcv3D6wApX32csq7tWZHOoLzaNTc64XIaV/STWs4md1Fqflz+w2FzBuOu
bFNf/72jKO678vyopQG+CqBzp8UAJep6vK69nSFizmbpubsPUj6XCGWMXD2H
V2mi/Lz4QOGaemw+EGuMI5vPHOiqHKaom7QUny06D0Y7Q2rE+BOlXfxrwZZe
ExzvtE461TVG2W7v7N8VfgG6Z8PW+RaNU4oXj00d2G2GVVfuVYblTVIUkkqU
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
43SJS0v2xJ2rYu03PR4HYtFnVYoUKg32niFLU4j3SZod56unISokrEHMgOST
1hJH7nYaUtSc2g4Ttxz1uipMp+FZZepSK2Il80kTaQYNB4QpAq+IRQdSaq16
aFjUfTdRn/S9Z0IOvNrIpEF2TnHoBrH7jBrvvmGyn9R9zj4j3nU3PuDkJxJP
eLmI/RzZnzVdtx5+JudzFv/vCuKOtbcz9b+R+iSwL3aO+NA72f2hczTIrON6
ttOInPextrkdP2jg4Vy1MpLYtVsl3PoPif9D6dkBxlTsuacV37iUDtNxZYVa
YsmtLzOkl9MRtT/9/PLzVNzMb4mNWknHqgv7gx4QO+tYbLmxho77mluRY0Le
h9NGJ08BOkJn/+ZpmZH4+3Eh0Ww3Hefr70+nE7vk5mev20vH13xxqRUXyf2G
Aq42yNCRaOjZ1kj8vu+RkPpBOg7suOhpa0FFuc0GZzc1OlpP+d1fZ032p1eX
9SsjOj6dHz/1iHhC8b3VSxM6+M/l3ttgQ+qHl/j80oyOcbbN7mK2VKQEcduV
WNHhTLmwwsCerN8Jq29crnTY7355Q/0yFbNH+Ntu3yf/t7l16R9x7zlbqzUh
dLwqVygpdiH5zWpiSWwYHRm0UDrFlTzfskOojaajq1yvyMmdii0V5RJn0+l4
4/I33t+LnBfnK5ZdqKODc9lI2TVvKl5uTgmVbaLjruEWprMPyWeGd1vWttEx
3CZ1xsGXisw35oc7u+jIsvq8OOI2qbdWJgQ8HqHDobA3suQBFTKTfwyml3Ug
KCHn5NxDUt/NJapyre5AoML4432hVDTfbfbay92Bi6WcvMVhVKgmCXf683dA
vH9R2ZIo0v9Upeqb7OhA3ExgnG8KqY838K/o0uhAj2xxt0U52b8+7w5kPyLj
hZ+vlq+kYslM8EG5iA4csVsrzlNN+o/f+yIqYjrwLna5MaOWiis9B04MpnSg
jzPXNa6VisPmt0rUCjvgETjiqTJI6iVelbyk/g58Oqv9x4lJ6lPmCeHzzA6c
9qWYJQ9T8erHsJPASAdmzGK/i4yR9yXDURA104HbZY4TRl/JevOr/yxdzEAo
XWDg19IaTD2cSwjYyQBb2U/ru8trIL6kXsJ+DwPzXM0ym1bVQGkjc6PefgY6
dX2fnueugYjabcp2CgObUs/YSgjVoPDVX9+pUwzEeGQpTeytQchw4tFhDwae
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
/j+WJGFw
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0., 0.33333331160306456`}, {0., 0.577350302208492}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.6752634081159286`*^9, 3.6752644895418167`*^9, 3.675266014198345*^9, 
   3.675266078079446*^9, {3.675266125549069*^9, 3.675266142256188*^9}, 
   3.6752662483517447`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
pIDUGA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, 4 Pi}, {-1.0471972410879922`, 0.}}, {{
     0, 12.566370614359172`}, {-1.0471972410879922`, 0.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.6752634081159286`*^9, 3.6752644895418167`*^9, 3.675266014198345*^9, 
   3.675266078079446*^9, {3.675266125549069*^9, 3.675266142256188*^9}, 
   3.675266248480712*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(*--Lie Group Control--*)", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"despath", " ", "=", " ", "2"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"despath", " ", "\[Equal]", " ", "1"}], ",", " ", 
    RowBox[{"k", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "8", ",", " ", "0"}], "}"}]}], ",", " ", 
    RowBox[{"despath", " ", "\[Equal]", " ", "2"}], ",", " ", 
    RowBox[{"k", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"3", ",", " ", "8", ",", "0"}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errF", "[", 
   RowBox[{"G", "[", "gerr_", "]"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]1", ",", " ", "\[Alpha]2"}], "}"}], " ", ",", " ", 
    "\[IndentingNewLine]", "  ", 
    RowBox[{
     RowBox[{"\[Alpha]1", " ", "=", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", 
       RowBox[{"gerr", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]2", " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", 
          RowBox[{"k", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", 
         RowBox[{"ArcTanH", "[", " ", 
          RowBox[{
           RowBox[{"gerr", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
           RowBox[{"-", 
            RowBox[{"gerr", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}], " ", "-", " ", 
        
        RowBox[{
         RowBox[{"k", "[", 
          RowBox[{"[", "3", "]"}], "]"}], " ", 
         RowBox[{"gerr", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]1", ",", " ", "\[Alpha]2"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Alpha]", ",", " ", "xover", ",", " ", "gsol"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Remove", "[", "gdes", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   FractionBox["1", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalTau]", " ", "=", " ", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]", " ", "\[Epsilon]"}], "\[Omega]"]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Alpha]", "[", 
       RowBox[{"[", "1", "]"}], "]"}], 
      RowBox[{"Sin", "[", "t", "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"\[Alpha]", "[", 
       RowBox[{"[", "2", "]"}], "]"}], 
      RowBox[{"(", " ", 
       RowBox[{"1", " ", "-", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "t"}], "]"}]}], ")"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v1", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", " ", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", " ", 
       "xover"}], ",", " ", "1", ",", "0"}], "]"}], " ", 
    RowBox[{"f", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"v2", "[", "t_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"t", ",", " ", 
          RowBox[{"2", " ", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", " ", 
        "xover"}], ",", "0", ",", "1"}], "]"}], 
     RowBox[{"f", "[", "t", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalA]", "[", "tt_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"v1", "[", "tt", "]"}], " ", "r\[ScriptCapitalA]"}], " ", "+", 
    " ", 
    RowBox[{
     RowBox[{"v2", "[", "tt", "]"}], " ", "l\[ScriptCapitalA]"}]}]}], 
  ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g0", "=", 
   RowBox[{"oInit", "[", 
    RowBox[{"G", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "5", ",", " ", 
       FractionBox["\[Pi]", "5"]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g0", "=", 
   RowBox[{"oInit", "[", 
    RowBox[{"G", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.2"}], ",", "0.3", ",", 
       FractionBox["\[Pi]", "12"]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Which", "[", "  ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"despath", " ", "\[Equal]", " ", "1"}], ",", 
    RowBox[{
     RowBox[{"gdes", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"oInit", "[", 
      RowBox[{"G", ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"despath", " ", "\[Equal]", " ", "2"}], ",", " ", 
    RowBox[{
     RowBox[{"gdes", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"oInit", "[", 
      RowBox[{"G", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SqrtBox["8"], "/", "100"}], " ", "t"}], ",", " ", 
         RowBox[{
          RowBox[{
           SqrtBox["8"], "/", "100"}], " ", "t"}], ",", " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           FractionBox[
            SqrtBox["8"], "100"], ",", " ", 
           RowBox[{"-", 
            FractionBox[
             SqrtBox["8"], "100"]}]}], "]"}]}], "}"}]}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"errv", " ", "=", " ", 
  RowBox[{"N", "[", 
   RowBox[{"errF", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", "g0", "]"}], "\[CenterDot]", 
     RowBox[{"gdes", "[", "0", "]"}]}], "]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.7323324552577968`"}], ",", 
   RowBox[{"-", "0.9786096472452545`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6752663018423767`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gcurr", "=", "g0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gflow", "=", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "gcurr"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]flow", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xflow", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rflow", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxsteps", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t0", " ", "=", " ", "0"}], ";", " ", 
   RowBox[{"t1", " ", "=", " ", 
    RowBox[{"maxsteps", " ", "*", " ", "\[CapitalTau]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"cnt", "=", "1"}], ",", 
    RowBox[{"cnt", "<=", "maxsteps"}], ",", 
    RowBox[{"cnt", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Alpha]", " ", "=", " ", 
      RowBox[{"errF", "[", 
       RowBox[{
        RowBox[{"Inverse", "[", "gcurr", "]"}], " ", "\[CenterDot]", 
        RowBox[{"gdes", "[", 
         RowBox[{"cnt", "*", "\[CapitalTau]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "8"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", "8"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "<", " ", 
        RowBox[{"-", "8"}]}], ",", " ", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
        RowBox[{"-", "8"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", ">", " ", 
        FractionBox["\[Pi]", "2"]}], ",", " ", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", 
        FractionBox["\[Pi]", "2"]}], ",", " ", 
       RowBox[{
        RowBox[{"\[Alpha]", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", "<", " ", 
        FractionBox[
         RowBox[{"-", "\[Pi]"}], "2"]}], ",", " ", 
       RowBox[{"err", " ", "=", " ", 
        FractionBox[
         RowBox[{"-", "\[Pi]"}], "2"]}]}], "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"xover", "=", 
      RowBox[{"t", " ", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "t", "]"}], " ", "==", " ", "0"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "\[Pi]", " ", ",", "0", ",", 
           RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gsol", "[", "cnt", "]"}], " ", "=", "  ", 
      RowBox[{"NDSolve", "[", " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[ScriptCapitalA]", "[", 
          FractionBox[
           RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}]}], " ", ",", 
        " ", "gcurr", ",", "g", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", " ", "\[CapitalTau]"}], "}"}]}], "]"}]}],
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"gsol1", "[", "cnt", "]"}], "=", 
        RowBox[{"G", "[", 
         RowBox[{"fDSolve", ",", 
          RowBox[{
           RowBox[{"-", "rA"}], " ", 
           RowBox[{"f", "[", "t", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", "gcurr", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t0", ",", "xover"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gsol2", "[", "cnt", "]"}], "=", 
        RowBox[{"G", "[", 
         RowBox[{"fDSolve", ",", 
          RowBox[{
           RowBox[{"-", "lA"}], " ", 
           RowBox[{"f", "[", 
            RowBox[{"t", "+", "xover"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"g", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", "xover", "]"}], "/.", 
              RowBox[{"gsol1", "[", "cnt", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"G", "[", "fDim", "]"}]}], "}"}]}], "]"}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"t1", "-", "xover"}]}], "}"}]}], "]"}]}], ";"}], "*)"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"gcurr", "=", 
      RowBox[{"oInit", "[", 
       RowBox[{"G", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"gLocal", "[", "g", "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\[CapitalTau]", "]"}], "/.", 
            RowBox[{"gsol", "[", "cnt", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"gDim", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gflow", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"gflow", ",", "gcurr"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]flow", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"\[Alpha]flow", ",", " ", "\[Alpha]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xflow", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"xflow", ",", " ", "xover"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rflow", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"rflow", ",", " ", 
        RowBox[{"\[Integral]", 
         RowBox[{
          RowBox[{"f", "[", 
           FractionBox[
            RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}], " ", 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"{", 
    RowBox[{"gcurr", ",", " ", 
     RowBox[{"gdes", "[", "t1", "]"}]}], "}"}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Inverse", "[", "gcurr", "]"}], " ", "\[CenterDot]", 
  RowBox[{"gdes", "[", 
   RowBox[{"cnt", "*", "\[CapitalTau]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"2.2047135207970108`"},
        {"2.2550982233736776`"},
        {"2.230170795637955`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"2.369537567017795`"},
        {"2.369537567017795`"},
        {
         RowBox[{"-", "0.7853981633974483`"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.675266319397029*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"4.946869712307844`*^-6"},
      {
       RowBox[{"-", "0.2834924506624166`"}]},
      {
       RowBox[{"-", "3.015568959035403`"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.67526631940261*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gft", "[", "t_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nt", ",", "tt"}], "}"}], ",", 
      RowBox[{
       RowBox[{"nt", "=", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{"t", "/", "\[CapitalTau]"}], "]"}], "+", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nt", "\[LessEqual]", "maxsteps"}], ",", 
         RowBox[{"tt", "=", 
          RowBox[{"t", "-", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{"t", "/", "\[CapitalTau]"}], "]"}], " ", 
            "\[CapitalTau]"}]}]}], ",", 
         RowBox[{
          RowBox[{"nt", "=", "maxsteps"}], ";", "\[IndentingNewLine]", 
          RowBox[{"tt", "=", "\[CapitalTau]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"gLocal", "[", "g", "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "tt", "]"}], "/.", 
            RowBox[{"gsol", "[", "nt", "]"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "dimG"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"dist", ",", " ", "err"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rft", "[", "time_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nt", ",", " ", "tt"}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"nt", " ", "=", " ", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{"time", "/", "\[CapitalTau]"}], "]"}], " ", "+", " ", 
         "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nt", "\[LessEqual]", "maxsteps"}], ",", 
         RowBox[{"tt", "=", 
          RowBox[{"time", "-", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{"time", "/", "\[CapitalTau]"}], "]"}], " ", 
            "\[CapitalTau]"}]}]}], ",", 
         RowBox[{
          RowBox[{"nt", "=", "maxsteps"}], ";", "\[IndentingNewLine]", 
          RowBox[{"tt", "=", "\[CapitalTau]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", " ", 
        RowBox[{
         RowBox[{"tt", " ", "\[LessEqual]", " ", 
          RowBox[{
           FractionBox["\[Epsilon]", "\[Omega]"], 
           RowBox[{"xflow", "[", 
            RowBox[{"[", "nt", "]"}], "]"}]}]}], " ", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"rflow", "[", 
             RowBox[{"[", "nt", "]"}], "]"}], " ", "/.", " ", 
            RowBox[{"{", 
             RowBox[{"t", " ", "\[Rule]", " ", "tt"}], "}"}]}], ",", " ", "1",
            ",", " ", "0"}], "}"}], " ", ",", " ", "True", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"rflow", "[", 
             RowBox[{"[", "nt", "]"}], "]"}], " ", "/.", " ", 
            RowBox[{"{", 
             RowBox[{"t", " ", "\[Rule]", " ", "tt"}], "}"}]}], ",", "0", ",",
            " ", "1"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qft", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"rft", "[", "t", "]"}], ",", " ", 
     RowBox[{"gft", "[", "t", "]"}]}], "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"gLocal", "[", 
         RowBox[{"gdes", "[", "t", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"gLocal", "[", 
         RowBox[{"gdes", "[", "t", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"gft", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"gft", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], " ", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "t0", ",", " ", "t1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1:eJxdxWlI0wEYgPE1G2Wa1kIxSTIy02lLzVAjmLa2wpW0hQ5Dw1qHCWUkbKJk
ioo2lWqVI40SG66kMOjwgJzbcg1N2TJt21/d8kCdTZtHarqsPvS+tAcefjvO
ZvLOk0kk0vE//9W5nYeMpUzdEcb/8p286KTIyRInpU7KwVaz17Jc1wSK3FdX
fDJVYH6cRF7F14KJ7cyyhLZuMEogDlalfgJpbmSasLoXTGS45q/vMID+Ef5a
QkmAJ49pQrVLg6CE2qrMcVjAre0Wab5wCOS5cVYkniOgKeydkVUxCnpbhSxK
yBiYeWmR2KccB321BZPkg1ZQ1MK7Odg3CQaUh9ScSrKBxXYOa3h+CizwqBLb
2N/B8S3UhhiKHQwafuFb3oNuru1S0e/NgOsOc0mu3FnQ0LBYNOE3B3LdAti+
A+iTsKwE7vN5cG1M4DeF6Ae4MTxVk7d/AZyeaRxjuiyCObJKVrIapcYYo+tu
LIHFUkbWEucn+Hg02PpwwzJ41xH1lG1EwykdtbFVK6BpWhFxje8AU2RG1/qA
X2DpUZFfxAh66210dturVVDvsjdSzSDF/jNMVhjf/QjNDc4o6qesAR/USfqp
F9BYr8ur596jPelGVguNDB54XVIfJUZtkSfch8rQmjc+V8orUErjs/Cvt1F9
c2eTWIqmKzw/DMjQyg7pcKECjeeksehK1NEZJDeoUEFXc8YeDUrXEfa+j2h7
73YSzYRmJ42f+UygIV9eqvMG0DuGuJIeC5pCCDyuj6GbUkKv7p5AVf1zer0V
DRosvh84hZpOJyzoptEKs3dyrh2NSzO37JpFZy3ybbo59DdQ30cv
     "]]}, 
   {RGBColor[0, 0, 0], LineBox[CompressedData["
1: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
4P8DVgQm2g==
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  GridLines->Automatic,
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6752663313795958`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "t0", ",", " ", "t1"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", " ", "\"\<x,y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"x,y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  GridLines->Automatic,
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.675266335789806*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"gft", "[", "t", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "*", 
    FractionBox["180", "\[Pi]"]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "t0", ",", " ", "t1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", " ", "\"\<\[Theta]\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.675266366457878*^9, 3.67526636740077*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 0], LineBox[CompressedData["
1:eJwUWXc81m8blZ29V8jK3ns/xx4Rnsoez/dB2b800FAiGWkhqVSiISGFUgpJ
0pIkDSoSSZpmkd77/cvncn/vdd3XOdc5KDL/o0eysrCw2PGwsPz/Z5Dtej/V
y7dscxLYSKSLU5LLs755Hafp7e2M4ODTRXdUj3qDVyXtj0VF4CUDXYyV8WTd
aKqjNXO9mtDepIto4aqtxV43acxZ/u17enQx3aJ6rSmxleb9dKVLiI8eTJKT
9S413aXddOTJ5f6phy26nRXHOe7Tjnc3fDEP0EfDiJRSrtdDWorZcj3eR/qY
KYk+sfXYE9qbguql/zwNsEwzJLc+sZu2m/75YP+QAZoyOVyqJHpoahUVzzT2
GiJoqJrtbNNzmpWB+21jSyPMW/u2nmC8oBnuG+vg+WuEE8WLOwo4XtIk7uxN
2fXEGP1eXjPpXm9oM1M3TA4cNsWOS7NXt0310ziP5Ta82G0GWa7S/zYee0sr
ZD9+TWWrOXTDUqZqEwdpJ4+Ls93dbInFvMc92o5DtGfD12+82WyFrpsKVyok
PtD8nZLMT26yRoLEg/jSpmFalemdf1cibGHrKOche+AjbehlfsRvOg0CGxM1
ixkjtMFI2dBfy4B3p+9xixmN0jLczj15nw3UPJH+dJDjEy22a1ns7u/Azvn4
e7yvPtHWphZbaXvZYZVGW3lW5RjN9nqDos8FO8j7SaSzpX6mJR7+o7Nr1g7f
9sQwdnmN0zjUdtHCafZovtpsO6/4hUbfv+lh5057HBgUkUue+kJLGZMwOtFg
j1CB9fO/OiZoY/92bPo4bA8966bXCce+0gyd39g/WOoAlhjBxvHYbzRpU0Fa
npoDuo+GF62z/U7zPlz5da8NiT8EWSZy/6B5BfN/VfdwQOPvTI3LiT9ofaYt
vdOrHVAqVCv19c0Pmnaet/SutQ7IVnvDpeX4k9b/1aOM6eOADbbss1HVP2nc
+1JdnF0d4L9Wd/S8xC9a62/BpueWDkCc/4uPu37RjtVYSjRoOEA9I71d6fMv
Wv9pf53D4g4QOl5Vx6BP0jwqx8W5/9ljrrav7FTTJC36zr41taP2GLzPkj+g
MkV7kXitQ/SJPTrfae6WOTBFcxP1vFt91R7FfLvCihjTtGUbb/+QT7WHeZSa
7AGOWRr/ucoYXQl7pCxPOZLq9Ye2kh6buxBih3Fl35tH7vyhza36pn7A0Q4h
6sbvq43maWONO5r/07SDvcEP9XeSCzSLuxoPPk0C9SZdnjM5CzSRS8y1+S8B
NcuqjQILC7Q7NguNTTcBPoeoW7aDf2mDzD8fm9PIe7s4D/nSF2nl0k9kN0UA
P1eqcP7XvkjjqrB97O8GRHizamWZ/qNJbItIk9AH+tYMep2u+EezjJc0WS8N
nNUOuxnEz4KsiYTDIpykvnS7Hq93ZsH05En2V19pkDSweb9pFwtG+nzNjr6m
wduo6ueuRhY8en5hr+gzGnJMlrHn/STzo6JfjPXS0GaWK1GsuQSQnUr7/ZGG
BYvf6mfDl8BZrKxsK/m1iXWUVW3JErStGljQlwISbF963nqxBNv2xwZ4mgEV
cGZ0CrBilPexi38YMGTfsLHXhRVxxw4ONBwCZJxUMgfTWOFUmvGs9BGw2qXg
6MQNVgxPjl5RE7JDnhtr5dwvVozsnOXXCrVDx8rEW+zabMiflfwe3GCHf56D
XUKRbFjSIbUIcfJ+3l5DsqfY4Mg2FqtL3nMjvXlS/SUbNgzJf6BP2OOjb4mU
nRs7mt9ZUrQBB8gF8Gp5prPDREd+2Y1AR/gGbbMJaGLHwj7N+Nf9jngQ5s9M
1OFAFC9j5tygE1iZ9zenruMAr5PLwwLKGdYRplk5pznwNu571M33zqiJEqs6
I8yJtrpggwtdLvgUk9Fc7c6JxKKJIBUbVyjE/+q+kcEJqRV65mvOuiLwP2r4
3i1O/GE19o1ic0NBYvf0s2lOULHBA7cC3PB4E437nS4Xnt0oo16fdwNnUo3M
+HouaN9n/bBp3A20FDmdmVIu/GaTtN2o4o6UbXk01jdc6HhQ4v5pjTuu7Jj3
ERDlxsCXP7LCO9wxvjMmQsaDG9F/hOb9jrtDZffrJNVMbmTncLu71bojJMM1
x7CZGzXSuSz5ze4oyrx+wnaWGxv+njX5c88d3VmqNe76S8G7LdE67L47luYe
afWNXopV+yR7qu66wz6P/TmzbCmycr/H9DW5Y8eBTSMJ/UshIPzycDdZv+HQ
h9ltYjzoFeFszC13x7d8H54sTx5c85wfGSt0h/qRVtmCvTw4vtNUsTnTHdRR
Pb3TLTx4WWe7/36SO44fO2V3aY4HpzqZ8xei3NF7gn/NdQNebOb2G/sY5A7+
UzvW3Y3hxfWcvxofvd2xgYq9zFXKC53hyY+Jru7oUQmcW/mCF30GYkUf7Nxh
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
ukww7HfsH48TEz3f+bJ8Xpig6PcD5m3CB8b9rOHUgAla+/TKWAgfHOmYs00c
NkFOGKf2vRAmZq58k9k9bgLr9Prwv0zS709+nDn00wTVN+b6ThF+uJn9pqd0
zgSVCaWmZ6KYWLa5u6b2nwlOzDfp/CPxjrCO3FZOU3xOH869tp6Jd+631nXz
myIixav2fgThE9Or9oNipig2uj5lwiD6R7FC/scyU7T/q6rlCmSCnf/Un39K
pni2VdbAmeiNyLmCPkFNUwwKa1/460r4oz/gxnl9UwgMJNazEHxvbFleYmNm
ioHEqPsPCb5/l43s7LUxhWE1p2ucGtEney9RsY6miLuwP29WmgnOmERH1pWm
qNOa6UzjZWK/p5naMR9TvMpf6JVboHBc7O5ER6gpyt5o1f56Q0FxLvtpSKQp
JoT5U0IeUKjoX3V1KtYUDzfpPrK7TqGh7E2y0lZTrM/z9BwjfNCt/4t1Z4Ep
jCYU/IaJXvATaxwRO26KuYSR365GFN7NpnZeKjVF0TnFQBFFCl+alx54XW2K
lSN5vVgkeC97umFDvSmkTa487/9K8Jt5ZDVXkylsw/a9c3pH/K2norRJpylC
ykZ5Rwi+9+t/mn/UZYrqg2HcTgTfYmLV75gvTOG2RTL+wUUGjs9uvPO73xTX
VZ9HZBA8Kfabnz30wRTvn3mG7Cb6oKJ5ca/aZ5I/DZkz3cSf6Ja1Rzd/N8Wy
gZyA7dkMNGTmeqydMcXf6dTVuRkMWEd7600smGLD1fCjbGkM3PWQEMlgM8OH
qIHVX1IZcNcfmJLmMYNY46yEA4m7Rcte1gqZoaN8ism9kwG/2fU3XSTNMGH+
Q9qUzH/3RufkOzkz5Nz5x+wg60c0T+7aomKGqzzRSVfI/l/O3GDyaZmB629O
4Vdyvo2Zu5zKDcxwdBmb0n/k/HNRTuqW5ma4E2XYrU7ut8uDl/eZLZmvp1HN
S+7Pqf/s63onMwzM//Lkqif6S/Ro9+JKM8TFN9xa2sqA6Gxw3RG6GfyKh8b/
Ef9//I1SkXaAGW6fKcl8QfzehTM1QYHrzLD4+uqdzjmSn8zNtj/jzDB9vYL9
BjeF+ihLxexNZnj0k9NNV5pCm17HaEOaGZLNK/udrCgM3H6bKHzCDAmmbapR
xI+GnylfU3HGDFLSP7/fzacwvifajFZhhjHpqx/elBO+WTm9ENdgBqtE7tI+
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"\[Theta]\"", TraditionalForm]},
  AxesOrigin->{0, 15.},
  GridLines->Automatic,
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.675266339120926*^9, 3.675266368803131*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{"gft", "[", "t", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "t0", ",", " ", "t1"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", " ", "\"\<distance to origin\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
eJL6jYHrKt+3nSz/H+/u2IM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"distance to origin\"", TraditionalForm]},
  AxesOrigin->{0, 0.1},
  GridLines->Automatic,
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.675266347591528*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
(*--Stabilization Using Forward Gait And Rotate Gait; Old--*)\
\>", "Subsection"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"--", "Needs"}], " ", "more", " ", 
   RowBox[{"work", ".", "  ", "An"}], " ", "error", " ", "function", " ", 
   "is", " ", 
   RowBox[{"wrong", ".", "--"}]}], "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", "Error"}], " ", "functionn", " ", "for", " ", "the", " ", 
    "position", " ", "and", " ", 
    RowBox[{"orientation", "--"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", "Use"}], " ", 
    RowBox[{"errF", "--"}]}], "*)"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"errR", "[", "cp_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ev", ",", " ", "xv", ",", " ", "dv"}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"dv", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"cp", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"Cos", "[", 
           RowBox[{"cp", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xv", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"cp", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"cp", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ev", " ", "=", " ", 
        FractionBox["xv", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"cp", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"cp", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "xv"}], ")"}], ".", "dv"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"err\[Theta]", "[", 
    RowBox[{"cp_", ",", " ", "sgn_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ev", ",", " ", "xv", ",", " ", "dv"}], "}"}], ",", " ", 
     RowBox[{
      RowBox[{"dv", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"cp", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"Cos", "[", 
          RowBox[{"cp", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xv", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"cp", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"cp", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ev", " ", "=", " ", 
       FractionBox["xv", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"cp", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"cp", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sgn", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"dv", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", 
          RowBox[{"ev", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"dv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", 
          RowBox[{"ev", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errF", "[", "cp_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ev", ",", " ", "xv", ",", " ", "dv", ",", " ", "sgn", ",", " ", "er1", 
      ",", "er2"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"dv", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"cp", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"Cos", "[", 
         RowBox[{"cp", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xv", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cp", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"cp", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ev", " ", "=", " ", 
      FractionBox["xv", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"cp", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"cp", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"er1", " ", "=", " ", 
      RowBox[{"xv", ".", "dv"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sgn", " ", "=", "  ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"er1", " ", "\[Equal]", " ", "0"}], ",", " ", "1", ",", " ", 
        "True", ",", " ", 
        RowBox[{"Sign", "[", "er1", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"er2", " ", "=", " ", 
      RowBox[{"ArcSin", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"dv", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", 
          RowBox[{"ev", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"dv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", 
          RowBox[{"ev", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"er1", ",", " ", "er2", ",", " ", "sgn"}], "}"}]}]}], 
   "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"err", ",", "dist", ",", " ", "xover", ",", " ", "gsol"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Remove", "[", "gdes", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   FractionBox["1", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalTau]", " ", "=", " ", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]", " ", "\[Epsilon]"}], "\[Omega]"]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"dist", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], "+", 
     RowBox[{
      FractionBox["1", "2"], "err", 
      RowBox[{"(", " ", 
       RowBox[{"1", " ", "-", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "t"}], "]"}]}], ")"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v1", "[", "t_", "]"}], " ", ":=", "  ", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", " ", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", " ", 
       "xover"}], ",", " ", "1", ",", " ", "0"}], "]"}], " ", 
    RowBox[{"f", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"v2", "[", "t_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"t", ",", " ", 
          RowBox[{"2", " ", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", "  ", 
        "xover"}], ",", " ", "0", ",", " ", "1"}], "]"}], 
     RowBox[{"f", "[", "t", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalA]", "[", "tt_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"v1", "[", "tt", "]"}], " ", "r\[ScriptCapitalA]"}], " ", "+", 
    " ", 
    RowBox[{
     RowBox[{"v2", "[", "tt", "]"}], " ", "l\[ScriptCapitalA]"}]}]}], 
  ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "5", ",", 
     FractionBox["\[Pi]", "5"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"errv", " ", "=", " ", 
  RowBox[{"errF", "[", "g0", "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gcurr", "=", "g0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gflow", "=", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "gcurr"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gdes", "[", "t_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eflow", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dflow", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xflow", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxsteps", "=", "400"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t0", " ", "=", " ", "1"}], ";", " ", 
   RowBox[{"t1", " ", "=", " ", 
    RowBox[{"maxsteps", " ", "*", " ", "\[CapitalTau]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"cnt", "=", "1"}], ",", 
    RowBox[{"cnt", "<=", "maxsteps"}], ",", 
    RowBox[{"cnt", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"errv", " ", "=", " ", 
      RowBox[{"errF", "[", "gcurr", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dist", " ", "=", 
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       RowBox[{"errv", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"err", " ", "=", 
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       RowBox[{"errv", "[", 
        RowBox[{"[", "3", "]"}], "]"}], 
       RowBox[{"errv", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"err", " ", ">", " ", 
        FractionBox["\[Pi]", "2"]}], ",", " ", 
       RowBox[{"err", " ", "=", " ", "\[Pi]"}], ",", " ", 
       RowBox[{"err", " ", "<", " ", 
        FractionBox[
         RowBox[{"-", "\[Pi]"}], "2"]}], ",", " ", 
       RowBox[{"err", " ", "=", " ", 
        RowBox[{"-", "\[Pi]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"dist", " ", ">", " ", 
        FractionBox["\[Pi]", "2"]}], ",", " ", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{
         FractionBox[
          RowBox[{"3", " "}], "2"], "\[Pi]"}]}], ",", " ", 
       RowBox[{"dist", " ", "<", " ", 
        FractionBox[
         RowBox[{"-", "\[Pi]"}], "2"]}], ",", " ", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{
         FractionBox[
          RowBox[{"-", "3"}], "2"], "\[Pi]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xover", "=", 
      RowBox[{"t", " ", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           FractionBox[
            RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}], " ", "==", 
          " ", "0"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{
            FractionBox["\[Epsilon]", "\[Omega]"], 
            RowBox[{"(", 
             RowBox[{"\[Pi]", " ", "+", " ", 
              OverscriptBox["\[Psi]", "_"]}], ")"}]}], ",", "0", ",", 
           "\[CapitalTau]"}], "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"gsol", "[", "cnt", "]"}], " ", "=", "  ", 
      RowBox[{"oNDSolve", "[", 
       RowBox[{"g", ",", " ", 
        RowBox[{"-", 
         RowBox[{"\[ScriptCapitalA]", "[", 
          FractionBox[
           RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}]}], " ", ",", 
        " ", 
        RowBox[{"oInit", "[", 
         RowBox[{"G", ",", "gcurr"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", " ", "\[CapitalTau]"}], "}"}]}], "]"}]}],
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"gsol1", "[", "cnt", "]"}], "=", 
        RowBox[{"G", "[", 
         RowBox[{"fDSolve", ",", 
          RowBox[{
           RowBox[{"-", "rA"}], " ", 
           RowBox[{"f", "[", "t", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", "gcurr", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t0", ",", "xover"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gsol2", "[", "cnt", "]"}], "=", 
        RowBox[{"G", "[", 
         RowBox[{"fDSolve", ",", 
          RowBox[{
           RowBox[{"-", "lA"}], " ", 
           RowBox[{"f", "[", 
            RowBox[{"t", "+", "xover"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"g", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", "xover", "]"}], "/.", 
              RowBox[{"gsol1", "[", "cnt", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"G", "[", "fDim", "]"}]}], "}"}]}], "]"}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"t1", "-", "xover"}]}], "}"}]}], "]"}]}], ";"}], "*)"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"gcurr", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"gLocal", "[", "g", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\[CapitalTau]", "]"}], "/.", 
          RowBox[{"gsol", "[", "cnt", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"gDim", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gflow", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"gflow", ",", "gcurr"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eflow", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"eflow", ",", "err"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dflow", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"dflow", ",", "dist"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xflow", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"xflow", ",", " ", "xover"}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gft", "[", "t_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nt", ",", "tt"}], "}"}], ",", 
      RowBox[{
       RowBox[{"nt", "=", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{"t", "/", "\[CapitalTau]"}], "]"}], "+", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nt", "\[LessEqual]", "maxsteps"}], ",", 
         RowBox[{"tt", "=", 
          RowBox[{"t", "-", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{"t", "/", "\[CapitalTau]"}], "]"}], " ", 
            "\[CapitalTau]"}]}]}], ",", 
         RowBox[{
          RowBox[{"nt", "=", "maxsteps"}], ";", "\[IndentingNewLine]", 
          RowBox[{"tt", "=", "\[CapitalTau]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"gLocal", "[", "g", "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "tt", "]"}], "/.", 
            RowBox[{"gsol", "[", "nt", "]"}]}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "dimG"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"dist", ",", " ", "err"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rft", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nt", ",", " ", "tt"}], "}"}], ",", " ", 
     RowBox[{
      RowBox[{"nt", " ", "=", " ", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"t", "/", "\[CapitalTau]"}], "]"}], " ", "+", " ", "1"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nt", "\[LessEqual]", "maxsteps"}], ",", 
        RowBox[{"tt", "=", 
         RowBox[{"t", "-", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{"t", "/", "\[CapitalTau]"}], "]"}], " ", 
           "\[CapitalTau]"}]}]}], ",", 
        RowBox[{
         RowBox[{"nt", "=", "maxsteps"}], ";", "\[IndentingNewLine]", 
         RowBox[{"tt", "=", "\[CapitalTau]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"tt", " ", "\[LessEqual]", " ", 
         RowBox[{"xflow", "[", 
          RowBox[{"[", "nt", "]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", "tt", "]"}], " ", "/.", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"err", " ", "\[Rule]", " ", 
              RowBox[{"eflow", "[", 
               RowBox[{"[", "nt", "]"}], "]"}]}], ",", " ", 
             RowBox[{"dist", " ", "\[Rule]", " ", 
              RowBox[{"dflow", "[", 
               RowBox[{"[", "nt", "]"}], "]"}]}]}], "}"}]}], ",", " ", "1", 
          ",", " ", "0"}], "}"}], " ", ",", " ", "True", ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", "tt", "]"}], " ", "/.", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"err", " ", "\[Rule]", " ", 
              RowBox[{"eflow", "[", 
               RowBox[{"[", "nt", "]"}], "]"}]}], ",", " ", 
             RowBox[{"dist", " ", "\[Rule]", " ", 
              RowBox[{"dflow", "[", 
               RowBox[{"[", "nt", "]"}], "]"}]}]}], "}"}]}], ",", " ", "0", 
          ",", " ", "1"}], "}"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qft", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"rft", "[", "t", "]"}], ",", " ", 
     RowBox[{"gft", "[", "t", "]"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "t0", ",", " ", "t1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "t0", ",", " ", "t1"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", " ", "\"\<x,y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gft", "[", "t", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "t0", ",", " ", "t1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", " ", "\"\<theta\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{"gft", "[", "t", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "t0", ",", " ", "t1"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", " ", "\"\<distance to origin\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
(*--Trajectory Tracking Using Forward Gait With Turning; Old--*)\
\>", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"err", ",", " ", "dist", ",", " ", "xover", ",", " ", "gsol"}], 
   "]"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    OverscriptBox["\[Psi]", "_"], " ", "=", " ", "err"}], ";", " ", 
   RowBox[{
    OverscriptBox["\[Psi]", "~"], " ", "=", "dist"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", 
   FractionBox["1", "4"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalTau]", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"\[Epsilon]", "/", "\[Omega]"}]}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", "\[CapitalTau]", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "t_", "]"}], " ", ":=", 
   RowBox[{
    OverscriptBox["\[Psi]", "~"], " ", 
    RowBox[{"(", " ", 
     RowBox[{
      OverscriptBox["\[Psi]", "_"], "+", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", " ", "-", " ", 
        RowBox[{"ArcSin", "[", " ", 
         OverscriptBox["\[Psi]", "_"], "]"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v1", "[", "t_", "]"}], " ", ":=", "  ", 
   RowBox[{
    RowBox[{"If", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"t", ",", 
         RowBox[{"2", " ", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", " ", 
       "xover"}], ",", " ", "1", ",", " ", "0"}], "]"}], " ", 
    RowBox[{"f", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"v2", "[", "t_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"t", ",", " ", 
          RowBox[{"2", " ", "\[Pi]"}]}], "]"}], " ", "\[LessEqual]", "  ", 
        "xover"}], ",", " ", "0", ",", " ", "1"}], "]"}], 
     RowBox[{"f", "[", "t", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalA]", "[", "tt_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"v1", "[", "tt", "]"}], " ", "r\[ScriptCapitalA]"}], " ", "+", 
    " ", 
    RowBox[{
     RowBox[{"v2", "[", "tt", "]"}], " ", "l\[ScriptCapitalA]"}]}]}], 
  ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", "t", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CalcDist", "[", 
    RowBox[{"gdes_", ",", "gcur_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dx", ",", "dy"}], "}"}], ",", 
     RowBox[{
      RowBox[{"dx", "=", 
       RowBox[{
        RowBox[{"gdes", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{"gcur", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dy", "=", 
       RowBox[{
        RowBox[{"gdes", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{"gcur", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sign", "[", 
        RowBox[{"Cos", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"dy", ",", "dx"}], "]"}], "]"}], "]"}], " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"dx", "+", 
         RowBox[{"\[ImaginaryI]", " ", "dy"}]}], "]"}]}]}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g0", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gdes", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "100"}], " ", "t"}], ",", " ", 
     RowBox[{
      RowBox[{"2", "/", "200"}], " ", "t"}], ",", " ", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gcurr", "=", "g0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gflow", "=", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "gcurr"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eflow", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dflow", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xflow", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxsteps", "=", "80"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kMp", " ", "=", " ", "4"}], ";", " ", 
  RowBox[{"kMv", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kTp", "=", " ", "4"}], ";", " ", 
   RowBox[{"kTv", " ", "=", " ", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"cnt", "=", "1"}], ",", 
    RowBox[{"cnt", "\[LessEqual]", "maxsteps"}], ",", 
    RowBox[{"cnt", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dist", " ", "=", " ", 
      RowBox[{"CalcDist", "[", 
       RowBox[{
        RowBox[{"gdes", "[", 
         RowBox[{"cnt", "*", "\[CapitalTau]"}], "]"}], ",", " ", "gcurr"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"cnt", " ", "==", " ", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"terr", " ", "=", 
        RowBox[{
         RowBox[{"kMp", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"gdes", "[", 
              RowBox[{"cnt", "*", "\[CapitalTau]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
            RowBox[{"gcurr", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"kMv", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"gdes", "[", 
               RowBox[{"cnt", "*", "\[CapitalTau]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
             RowBox[{"gcurr", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
           "\[CapitalTau]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"terr", " ", "=", " ", 
        RowBox[{
         RowBox[{"kTp", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"gdes", "[", 
              RowBox[{"cnt", "*", "\[CapitalTau]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
            RowBox[{"gcurr", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "+", " ", 
         RowBox[{"kTv", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"gdes", "[", 
                 RowBox[{"cnt", "*", "\[CapitalTau]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{
                RowBox[{"gdes", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"cnt", "-", "1"}], ")"}], "*", "\[CapitalTau]"}], 
                 "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
             "\[CapitalTau]"}], " ", "-", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"gcurr", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
               RowBox[{
                RowBox[{"gflow", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Length", "[", "gflow", "]"}], "-", "1"}], "]"}], 
                 "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
             "\[CapitalTau]"}]}], ")"}]}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"err", " ", "=", " ", "terr"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"err", " ", ">", " ", 
        RowBox[{"\[Pi]", "/", "4"}]}], ",", " ", 
       RowBox[{"err", " ", "=", " ", 
        RowBox[{"\[Pi]", "/", "4"}]}], ",", " ", 
       RowBox[{"err", " ", "<", " ", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "4"}]}], ",", " ", 
       RowBox[{"err", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "4"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"dist", " ", ">", " ", "3"}], ",", " ", 
       RowBox[{"dist", " ", "=", " ", "3"}], ",", " ", 
       RowBox[{"dist", " ", "<", " ", 
        RowBox[{"-", "3"}]}], ",", " ", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"-", "3"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"xover", "=", 
      RowBox[{"t", " ", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           FractionBox[
            RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}], " ", "==", 
          " ", "0"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{
            FractionBox["\[Epsilon]", "\[Omega]"], 
            RowBox[{"(", 
             RowBox[{"\[Pi]", " ", "+", 
              RowBox[{"ArcSin", "[", 
               OverscriptBox["\[Psi]", "_"], "]"}]}], ")"}]}], ",", "0", ",", 
           "\[CapitalTau]"}], "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"gsol", "[", "cnt", "]"}], " ", "=", "  ", 
      RowBox[{"oNDSolve", "[", 
       RowBox[{"g", ",", " ", 
        RowBox[{"-", 
         RowBox[{"\[ScriptCapitalA]", "[", 
          FractionBox[
           RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}]}], " ", ",", 
        " ", 
        RowBox[{"oInit", "[", 
         RowBox[{"G", ",", "gcurr"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", " ", "\[CapitalTau]"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"gsol1", "[", "cnt", "]"}], "=", 
        RowBox[{"G", "[", 
         RowBox[{"fDSolve", ",", 
          RowBox[{
           RowBox[{"-", "rA"}], " ", 
           RowBox[{"f", "[", "t", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", "gcurr", ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "t0", ",", "xover"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gsol2", "[", "cnt", "]"}], "=", 
        RowBox[{"G", "[", 
         RowBox[{"fDSolve", ",", 
          RowBox[{
           RowBox[{"-", "lA"}], " ", 
           RowBox[{"f", "[", 
            RowBox[{"t", "+", "xover"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"g", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", "xover", "]"}], "/.", 
              RowBox[{"gsol1", "[", "cnt", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "dimG"}], "}"}]}], "]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"t1", "-", "xover"}]}], "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"gcurr", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"gLocal", "[", "g", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "\[CapitalTau]", "]"}], "/.", 
          RowBox[{"gsol", "[", "cnt", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "dimG"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gflow", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"gflow", ",", "gcurr"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eflow", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"eflow", ",", "err"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dflow", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"dflow", ",", "dist"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xflow", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"xflow", ",", " ", "xover"}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input"],

Cell[BoxData["eflow"], "Input"],

Cell[BoxData["dflow"], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", "t", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gft", "[", "t_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nt", ",", "tt"}], "}"}], ",", 
     RowBox[{
      RowBox[{"nt", "=", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"t", "/", "\[CapitalTau]"}], "]"}], "+", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nt", "\[LessEqual]", "maxsteps"}], ",", 
        RowBox[{"tt", "=", 
         RowBox[{"t", "-", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{"t", "/", "\[CapitalTau]"}], "]"}], " ", 
           "\[CapitalTau]"}]}]}], ",", 
        RowBox[{
         RowBox[{"nt", "=", "maxsteps"}], ";", "\[IndentingNewLine]", 
         RowBox[{"tt", "=", "\[CapitalTau]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"gLocal", "[", "g", "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "tt", "]"}], "/.", 
           RowBox[{"gsol", "[", "nt", "]"}]}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "dimG"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"gft", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"gft", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"gdes", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{
        RowBox[{"gdes", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"maxsteps", "*", "\[CapitalTau]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"gft", "[", "t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"maxsteps", "*", "\[CapitalTau]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"gft", "[", "t", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"maxsteps", "*", "\[CapitalTau]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    FractionBox[
     RowBox[{"\[Omega]", " ", "t"}], "\[Epsilon]"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "\[CapitalTau]"}], "}"}]}], "]"}]], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(*--Animating the Biped--*)", "Section"],

Cell[CellGroupData[{

Cell["(*-- Definitions. --*)", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bodylen", " ", "=", " ", 
   RowBox[{"pd", " ", "+", " ", 
    FractionBox["pd", "5"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"corndist", " ", "=", " ", 
   RowBox[{"bodylen", " ", "*", " ", 
    SqrtBox["2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pegrad", " ", "=", " ", 
   FractionBox["pd", "5"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rotlen", " ", "=", " ", 
    FractionBox["pd", "2"]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XWIN", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1.1", ",", " ", "4.1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YWIN", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1.1", ",", " ", "4.1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRDX", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GRDY", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GSTP", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CSTP", " ", "=", " ", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XLen", " ", "=", " ", "bodylen"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BipedParams", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Axes", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"False", ",", "False"}], "}"}]}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "True"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gBiped", "[", "q_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", " ", "y", ",", " ", "\[Theta]", ",", " ", "gfx", ",", " ", 
       "angles", ",", " ", "r1", ",", " ", "r2", ",", " ", "r3", ",", " ", 
       "xcent", ",", " ", "ycent"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"q", "[", 
        RowBox[{"[", 
         RowBox[{"dimM", "+", "1"}], "]"}], "]"}]}], ";", " ", 
      RowBox[{"y", " ", "=", " ", 
       RowBox[{"q", "[", 
        RowBox[{"[", 
         RowBox[{"dimM", "+", "2"}], "]"}], "]"}]}], ";", " ", 
      RowBox[{"\[Theta]", " ", "=", " ", 
       RowBox[{"q", "[", 
        RowBox[{"[", 
         RowBox[{"dimM", "+", "3"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"angles", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"3", "\[Pi]"}], "4"]}], ",", " ", 
         RowBox[{"-", 
          FractionBox["\[Pi]", "4"]}], ",", " ", 
         FractionBox["\[Pi]", "4"], ",", " ", 
         FractionBox[
          RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"3", "\[Pi]"}], "4"]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gfx", "=", " ", 
       RowBox[{"{", 
        RowBox[{"Line", "[", 
         RowBox[{"Table", "[", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "  ", "-", " ", 
              RowBox[{"corndist", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]", " ", "+", " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ",", " ", 
             RowBox[{"y", " ", "-", " ", 
              RowBox[{"corndist", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Theta]", " ", "+", " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}]}], "}"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"Length", "[", "angles", "]"}]}], "}"}]}], "]"}], "]"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gfx", " ", "=", " ", 
       RowBox[{"Append", "[", 
        RowBox[{"gfx", ",", " ", 
         RowBox[{"If", "[", "  ", 
          RowBox[{
           RowBox[{
            RowBox[{"q", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", "1"}], ",",
            " ", 
           RowBox[{"Disk", "[", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", " ", "+", " ", 
                RowBox[{"pd", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
               RowBox[{"y", " ", "+", 
                RowBox[{"pd", " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", " ",
              "pegrad"}], "]"}], ",", 
           RowBox[{"Disk", "[", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", " ", "-", 
                RowBox[{"pd", " ", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
               RowBox[{"y", " ", "-", "  ", 
                RowBox[{"pd", " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", " ",
              "pegrad"}], "]"}]}], " ", "]"}]}], " ", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gfx", " ", "=", " ", 
       RowBox[{"Append", "[", 
        RowBox[{"gfx", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", " ", "+", " ", 
                 RowBox[{"rotlen", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", " ", "+", " ", 
                    RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", " ", 
                RowBox[{"y", " ", "+", " ", 
                 RowBox[{"rotlen", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]", " ", "+", " ", 
                    RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", " ", "-", 
                 RowBox[{"rotlen", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"\[Theta]", " ", "+", " ", 
                    RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", " ", 
                RowBox[{"y", " ", "-", " ", 
                 RowBox[{"rotlen", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"\[Theta]", " ", "+", " ", 
                    RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}]}], "}"}]}], 
             "}"}], "]"}]}], " ", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gfx", " ", "=", " ", 
       RowBox[{"Append", "[", 
        RowBox[{"gfx", ",", 
         RowBox[{"fMakeGrid", "[", 
          RowBox[{"GRDX", ",", " ", "GRDY", ",", " ", "GSTP"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gfx", " ", "=", " ", 
       RowBox[{"Append", "[", 
        RowBox[{"gfx", ",", 
         RowBox[{"Disk", "[", 
          RowBox[{"despt", ",", " ", "0.05"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"gfx", ",", 
        RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", " ", "-", "XWIN"}], ",", 
             RowBox[{"x", "+", "XWIN"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"y", "-", "YWIN"}], ",", 
             RowBox[{"y", "+", "YWIN"}]}], "}"}]}], "}"}]}]}], "]"}]}]}], 
    "\n", "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gBiped", "[", 
   RowBox[{"q_", ",", " ", "gd_", ",", " ", "params___"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", " ", "y", ",", " ", "\[Theta]", ",", " ", "gfx", ",", " ", 
      "angles", ",", " ", "r1", ",", " ", "r2", ",", " ", "r3", ",", " ", 
      "plot1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"q", "[", 
       RowBox[{"[", 
        RowBox[{"dimM", "+", "1"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"y", " ", "=", " ", 
      RowBox[{"q", "[", 
       RowBox[{"[", 
        RowBox[{"dimM", "+", "2"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"\[Theta]", " ", "=", " ", 
      RowBox[{"q", "[", 
       RowBox[{"[", 
        RowBox[{"dimM", "+", "3"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"angles", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", "\[Pi]"}], "4"]}], ",", " ", 
        RowBox[{"-", 
         FractionBox["\[Pi]", "4"]}], ",", " ", 
        FractionBox["\[Pi]", "4"], ",", " ", 
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"3", "\[Pi]"}], "4"]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gfx", "=", " ", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "  ", "-", " ", 
             RowBox[{"corndist", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", " ", "+", " ", 
                RowBox[{"angles", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ",", " ", 
            RowBox[{"y", " ", "-", " ", 
             RowBox[{"corndist", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", " ", "+", " ", 
                RowBox[{"angles", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}]}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "angles", "]"}]}], "}"}]}], "]"}], "]"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gfx", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"gfx", ",", " ", 
        RowBox[{"If", "[", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", "1"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Disk", "[", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", " ", "+", " ", 
                 RowBox[{"pd", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
                RowBox[{"y", " ", "+", " ", 
                 RowBox[{"pd", " ", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
              " ", "pegrad"}], "]"}], ",", 
            RowBox[{"Circle", "[", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", " ", "-", " ", 
                 RowBox[{"pd", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
                RowBox[{"y", " ", "-", "  ", 
                 RowBox[{"pd", " ", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
              " ", "pegrad"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Circle", "[", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", " ", "+", " ", 
                 RowBox[{"pd", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
                RowBox[{"y", " ", "+", " ", 
                 RowBox[{"pd", " ", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
              " ", "pegrad"}], "]"}], ",", 
            RowBox[{"Disk", "[", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", " ", "-", " ", 
                 RowBox[{"pd", " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], " ", ",", " ", 
                RowBox[{"y", " ", "-", "  ", 
                 RowBox[{"pd", " ", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
              " ", "pegrad"}], "]"}]}], " ", "}"}]}], "]"}]}], " ", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"gfx", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"gfx", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", " ", "+", " ", 
                RowBox[{"rotlen", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]", " ", "+", " ", 
                   RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", " ", 
               RowBox[{"y", " ", "+", " ", 
                RowBox[{"rotlen", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", " ", "+", " ", 
                   RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", " ", "-", 
                RowBox[{"rotlen", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]", " ", "+", " ", 
                   RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", " ", 
               RowBox[{"y", " ", "-", " ", 
                RowBox[{"rotlen", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", " ", "+", " ", 
                   RowBox[{"q", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}]}], "}"}]}], 
            "}"}], "]"}]}], " ", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gfx", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"gfx", ",", 
        RowBox[{"fMakeGrid", "[", 
         RowBox[{"GRDX", ",", " ", "GRDY", ",", " ", "GSTP"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"plot1", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gPosition", "[", 
         RowBox[{
          RowBox[{"G", "[", "gd", "]"}], "\[CenterDot]", 
          RowBox[{"oInit", "[", 
           RowBox[{"G", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                FractionBox["1", "4"]}], "XLen"}], " ", ",", " ", "0", ",", 
              " ", "0"}], "}"}]}], "]"}]}], "]"}], ",", " ", 
        RowBox[{"gPosition", "[", " ", 
         RowBox[{
          RowBox[{"G", "[", "gd", "]"}], " ", "\[CenterDot]", 
          RowBox[{"oInit", "[", 
           RowBox[{"G", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               FractionBox["1", "4"], "XLen"}], " ", ",", " ", "0", ",", " ", 
              "0"}], "}"}]}], "]"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gfx", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"gfx", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", " ", 
          RowBox[{"Line", "[", "plot1", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gfx", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"gfx", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"gPosition", "[", 
             RowBox[{"G", "[", "gd", "]"}], "]"}], ",", 
            RowBox[{
             FractionBox["1", "40"], "XLen"}]}], "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"plot1", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gPosition", "[", 
         RowBox[{
          RowBox[{"G", "[", "gd", "]"}], "\[CenterDot]", " ", 
          RowBox[{"oInit", "[", 
           RowBox[{"G", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               FractionBox["1", "2"], "XLen"}], ",", "0"}], "}"}]}], "]"}]}], 
         "]"}], ",", " ", 
        RowBox[{"gPosition", "[", " ", 
         RowBox[{
          RowBox[{"G", "[", "gd", "]"}], " ", "\[CenterDot]", 
          RowBox[{"oInit", "[", 
           RowBox[{"G", ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", " ", ",", 
              RowBox[{
               RowBox[{"-", " ", 
                FractionBox["1", "4"]}], "XLen"}], ",", " ", "0"}], "}"}]}], 
           "]"}]}], "]"}]}], "}"}]}], ";", 
     RowBox[{"gfx", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"gfx", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", " ", 
          RowBox[{"Line", "[", "plot1", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"gfx", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"gfx", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"gd", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{"gd", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
            RowBox[{
             FractionBox["1", "8"], "XLen"}]}], "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"xcent", " ", "=", 
      RowBox[{"0", "*", 
       RowBox[{"Max", "[", 
        RowBox[{"xcent", ",", " ", 
         RowBox[{"CSTP", " ", 
          RowBox[{"Quotient", "[", 
           RowBox[{
            RowBox[{"gd", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "CSTP"}], "]"}]}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ycent", " ", "=", 
      RowBox[{"0", "*", 
       RowBox[{"Max", "[", 
        RowBox[{"ycent", ",", " ", 
         RowBox[{"CSTP", " ", 
          RowBox[{"Quotient", "[", 
           RowBox[{
            RowBox[{"gd", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", "CSTP"}], "]"}]}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"gfx", ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"xcent", "-", 
                RowBox[{"XWIN", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"xcent", " ", "+", 
                RowBox[{"XWIN", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ycent", "-", 
                RowBox[{"YWIN", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"ycent", "+", 
                RowBox[{"YWIN", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], "}"}], 
         ",", "params"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(*-- Visualization Outputs. --*)", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pplot", " ", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"gft", "[", "t", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"gft", "[", "t", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "t0", ",", " ", "t1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], "}"}]}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"snaps", "  ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"gBiped", "[", 
      RowBox[{
       RowBox[{"qft", "[", "t", "]"}], ",", " ", 
       RowBox[{"gLocal", "[", 
        RowBox[{"gdes", "[", "t", "]"}], "]"}], ",", " ", "BipedParams"}], 
      "]"}], " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t0", ",", " ", "t1", ",", " ", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"t1", "-", "t0"}], ")"}], "5.25"]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"stills", " ", "=", " ", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"snaps", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "snaps", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"pplot", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "stills"}], "}"}], ",",
     " ", 
    RowBox[{
     RowBox[{"snaps", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "//", "Show"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
4P8DVgQm2g==
       "]]}}}, {{
     LineBox[{{-0.058578643762690535`, 
      0.5449489742783178}, {-0.4449489742783178, 
      0.4414213562373095}, {-0.34142135623730957`, 0.05505102572168216}, {
      0.044948974278317844`, 0.15857864376269049`}, {-0.058578643762690535`, 
      0.5449489742783178}}], {
      DiskBox[{-0.03901236228515531, 0.3431365075170868}, NCache[
       Rational[1, 30], 0.03333333333333333]], 
      CircleBox[{-0.3609876377148447, 0.2568634924829132}, NCache[
       Rational[1, 30], 0.03333333333333333]]}, 
     {Thickness[0.01], 
      LineBox[{{-0.15932434292691874`, 
       0.3727319418558142}, {-0.24067565707308128`, 
       0.22726805814418577`}}]}, {LineBox[{{-10, -10}, {-10, 10}}], 
      LineBox[{{-9, -10}, {-9, 10}}], LineBox[{{-8, -10}, {-8, 10}}], 
      LineBox[{{-7, -10}, {-7, 10}}], LineBox[{{-6, -10}, {-6, 10}}], 
      LineBox[{{-5, -10}, {-5, 10}}], LineBox[{{-4, -10}, {-4, 10}}], 
      LineBox[{{-3, -10}, {-3, 10}}], LineBox[{{-2, -10}, {-2, 10}}], 
      LineBox[{{-1, -10}, {-1, 10}}], LineBox[{{0, -10}, {0, 10}}], 
      LineBox[{{1, -10}, {1, 10}}], LineBox[{{2, -10}, {2, 10}}], 
      LineBox[{{3, -10}, {3, 10}}], LineBox[{{4, -10}, {4, 10}}], 
      LineBox[{{5, -10}, {5, 10}}], LineBox[{{6, -10}, {6, 10}}], 
      LineBox[{{7, -10}, {7, 10}}], LineBox[{{8, -10}, {8, 10}}], 
      LineBox[{{9, -10}, {9, 10}}], LineBox[{{10, -10}, {10, 10}}], 
      LineBox[{{-10, -10}, {10, -10}}], LineBox[{{-10, -9}, {10, -9}}], 
      LineBox[{{-10, -8}, {10, -8}}], LineBox[{{-10, -7}, {10, -7}}], 
      LineBox[{{-10, -6}, {10, -6}}], LineBox[{{-10, -5}, {10, -5}}], 
      LineBox[{{-10, -4}, {10, -4}}], LineBox[{{-10, -3}, {10, -3}}], 
      LineBox[{{-10, -2}, {10, -2}}], LineBox[{{-10, -1}, {10, -1}}], 
      LineBox[{{-10, 0}, {10, 0}}], LineBox[{{-10, 1}, {10, 1}}], 
      LineBox[{{-10, 2}, {10, 2}}], LineBox[{{-10, 3}, {10, 3}}], 
      LineBox[{{-10, 4}, {10, 4}}], LineBox[{{-10, 5}, {10, 5}}], 
      LineBox[{{-10, 6}, {10, 6}}], LineBox[{{-10, 7}, {10, 7}}], 
      LineBox[{{-10, 8}, {10, 8}}], LineBox[{{-10, 9}, {10, 9}}], 
      LineBox[{{-10, 10}, {10, 10}}]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{-0.035355339059327376`, 0.035355339059327376`}, {
       0.035355339059327376`, -0.035355339059327376`}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{0., 0.}, NCache[Rational[1, 200], 0.005]]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{0.07071067811865475, 
       0.07071067811865475}, {-0.035355339059327376`, \
-0.035355339059327376`}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{0., 0.}, NCache[Rational[1, 40], 0.025]]}}, {
     LineBox[{{0.008850035868285588, 0.2637677721806683}, {0.3223825150745954,
       0.015378190106973222`}, {0.5707720971482906, 0.32891066931328306`}, {
      0.2572396179419809, 0.5773002513869783}, {0.008850035868285588, 
      0.2637677721806683}}], {
      CircleBox[{0.15917253350565902`, 0.3998348799443487}, NCache[
       Rational[1, 30], 0.03333333333333333]], 
      DiskBox[{0.42044959951091715`, 0.19284356154960275`}, NCache[
       Rational[1, 30], 0.03333333333333333]]}, 
     {Thickness[0.01], 
      LineBox[{{0.274784651370482, 0.2143718413052078}, {0.30483748164609414`,
        0.3783066001887436}}]}, {LineBox[{{-10, -10}, {-10, 10}}], 
      LineBox[{{-9, -10}, {-9, 10}}], LineBox[{{-8, -10}, {-8, 10}}], 
      LineBox[{{-7, -10}, {-7, 10}}], LineBox[{{-6, -10}, {-6, 10}}], 
      LineBox[{{-5, -10}, {-5, 10}}], LineBox[{{-4, -10}, {-4, 10}}], 
      LineBox[{{-3, -10}, {-3, 10}}], LineBox[{{-2, -10}, {-2, 10}}], 
      LineBox[{{-1, -10}, {-1, 10}}], LineBox[{{0, -10}, {0, 10}}], 
      LineBox[{{1, -10}, {1, 10}}], LineBox[{{2, -10}, {2, 10}}], 
      LineBox[{{3, -10}, {3, 10}}], LineBox[{{4, -10}, {4, 10}}], 
      LineBox[{{5, -10}, {5, 10}}], LineBox[{{6, -10}, {6, 10}}], 
      LineBox[{{7, -10}, {7, 10}}], LineBox[{{8, -10}, {8, 10}}], 
      LineBox[{{9, -10}, {9, 10}}], LineBox[{{10, -10}, {10, 10}}], 
      LineBox[{{-10, -10}, {10, -10}}], LineBox[{{-10, -9}, {10, -9}}], 
      LineBox[{{-10, -8}, {10, -8}}], LineBox[{{-10, -7}, {10, -7}}], 
      LineBox[{{-10, -6}, {10, -6}}], LineBox[{{-10, -5}, {10, -5}}], 
      LineBox[{{-10, -4}, {10, -4}}], LineBox[{{-10, -3}, {10, -3}}], 
      LineBox[{{-10, -2}, {10, -2}}], LineBox[{{-10, -1}, {10, -1}}], 
      LineBox[{{-10, 0}, {10, 0}}], LineBox[{{-10, 1}, {10, 1}}], 
      LineBox[{{-10, 2}, {10, 2}}], LineBox[{{-10, 3}, {10, 3}}], 
      LineBox[{{-10, 4}, {10, 4}}], LineBox[{{-10, 5}, {10, 5}}], 
      LineBox[{{-10, 6}, {10, 6}}], LineBox[{{-10, 7}, {10, 7}}], 
      LineBox[{{-10, 8}, {10, 8}}], LineBox[{{-10, 9}, {10, 9}}], 
      LineBox[{{-10, 10}, {10, 10}}]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{0.4159851498964431, 0.4866958280150978}, {0.4866958280150978, 
       0.4159851498964431}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{0.45134048895577045`, 0.45134048895577045`}, NCache[
       Rational[1, 200], 0.005]]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{0.5220511670744252, 0.5220511670744252}, {0.4159851498964431, 
       0.4159851498964431}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{0.45134048895577045`, 0.45134048895577045`}, NCache[
       Rational[1, 40], 0.025]]}}, {
     LineBox[{{0.4506536109648389, 0.7889720297257689}, {0.7319482919031255, 
      0.5045897122799973}, {1.016330609348897, 0.7858843932182838}, {
      0.7350359284106105, 1.0702667106640553`}, {0.4506536109648389, 
      0.7889720297257689}}], {
      DiskBox[{0.6162859930992486, 0.9059208437410978}, NCache[
       Rational[1, 30], 0.03333333333333333]], 
      CircleBox[{0.8506982272144874, 0.6689355792029549}, NCache[
       Rational[1, 30], 0.03333333333333333]]}, 
     {Thickness[0.01], 
      LineBox[{{0.6502082072852053, 0.7845583740362305}, {0.8167760130285306, 
       0.7902980489078222}}]}, {LineBox[{{-10, -10}, {-10, 10}}], 
      LineBox[{{-9, -10}, {-9, 10}}], LineBox[{{-8, -10}, {-8, 10}}], 
      LineBox[{{-7, -10}, {-7, 10}}], LineBox[{{-6, -10}, {-6, 10}}], 
      LineBox[{{-5, -10}, {-5, 10}}], LineBox[{{-4, -10}, {-4, 10}}], 
      LineBox[{{-3, -10}, {-3, 10}}], LineBox[{{-2, -10}, {-2, 10}}], 
      LineBox[{{-1, -10}, {-1, 10}}], LineBox[{{0, -10}, {0, 10}}], 
      LineBox[{{1, -10}, {1, 10}}], LineBox[{{2, -10}, {2, 10}}], 
      LineBox[{{3, -10}, {3, 10}}], LineBox[{{4, -10}, {4, 10}}], 
      LineBox[{{5, -10}, {5, 10}}], LineBox[{{6, -10}, {6, 10}}], 
      LineBox[{{7, -10}, {7, 10}}], LineBox[{{8, -10}, {8, 10}}], 
      LineBox[{{9, -10}, {9, 10}}], LineBox[{{10, -10}, {10, 10}}], 
      LineBox[{{-10, -10}, {10, -10}}], LineBox[{{-10, -9}, {10, -9}}], 
      LineBox[{{-10, -8}, {10, -8}}], LineBox[{{-10, -7}, {10, -7}}], 
      LineBox[{{-10, -6}, {10, -6}}], LineBox[{{-10, -5}, {10, -5}}], 
      LineBox[{{-10, -4}, {10, -4}}], LineBox[{{-10, -3}, {10, -3}}], 
      LineBox[{{-10, -2}, {10, -2}}], LineBox[{{-10, -1}, {10, -1}}], 
      LineBox[{{-10, 0}, {10, 0}}], LineBox[{{-10, 1}, {10, 1}}], 
      LineBox[{{-10, 2}, {10, 2}}], LineBox[{{-10, 3}, {10, 3}}], 
      LineBox[{{-10, 4}, {10, 4}}], LineBox[{{-10, 5}, {10, 5}}], 
      LineBox[{{-10, 6}, {10, 6}}], LineBox[{{-10, 7}, {10, 7}}], 
      LineBox[{{-10, 8}, {10, 8}}], LineBox[{{-10, 9}, {10, 9}}], 
      LineBox[{{-10, 10}, {10, 10}}]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{0.8673256388522135, 0.9380363169708683}, {0.9380363169708683, 
       0.8673256388522135}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{0.9026809779115409, 0.9026809779115409}, NCache[
       Rational[1, 200], 0.005]]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{0.9733916560301956, 0.9733916560301956}, {0.8673256388522135, 
       0.8673256388522135}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{0.9026809779115409, 0.9026809779115409}, NCache[
       Rational[1, 40], 0.025]]}}, {
     LineBox[{{0.9095996962917057, 1.2659256749140488`}, {1.1686233619012596`,
       0.9611196043475492}, {1.4734294324677593`, 1.2201432699571029`}, {
      1.2144057668582056`, 1.5249493405236028`}, {0.9095996962917057, 
      1.2659256749140488`}}], {
      CircleBox[{1.0835880370424185`, 1.3700370018382841`}, NCache[
       Rational[1, 30], 0.03333333333333333]], 
      DiskBox[{1.2994410917170465`, 1.1160319430328678`}, NCache[
       Rational[1, 30], 0.03333333333333333]]}, 
     {Thickness[0.01], 
      LineBox[{{1.124054794903735, 1.2919591486909145`}, {1.25897433385573, 
       1.1941097961802374`}}]}, {LineBox[{{-10, -10}, {-10, 10}}], 
      LineBox[{{-9, -10}, {-9, 10}}], LineBox[{{-8, -10}, {-8, 10}}], 
      LineBox[{{-7, -10}, {-7, 10}}], LineBox[{{-6, -10}, {-6, 10}}], 
      LineBox[{{-5, -10}, {-5, 10}}], LineBox[{{-4, -10}, {-4, 10}}], 
      LineBox[{{-3, -10}, {-3, 10}}], LineBox[{{-2, -10}, {-2, 10}}], 
      LineBox[{{-1, -10}, {-1, 10}}], LineBox[{{0, -10}, {0, 10}}], 
      LineBox[{{1, -10}, {1, 10}}], LineBox[{{2, -10}, {2, 10}}], 
      LineBox[{{3, -10}, {3, 10}}], LineBox[{{4, -10}, {4, 10}}], 
      LineBox[{{5, -10}, {5, 10}}], LineBox[{{6, -10}, {6, 10}}], 
      LineBox[{{7, -10}, {7, 10}}], LineBox[{{8, -10}, {8, 10}}], 
      LineBox[{{9, -10}, {9, 10}}], LineBox[{{10, -10}, {10, 10}}], 
      LineBox[{{-10, -10}, {10, -10}}], LineBox[{{-10, -9}, {10, -9}}], 
      LineBox[{{-10, -8}, {10, -8}}], LineBox[{{-10, -7}, {10, -7}}], 
      LineBox[{{-10, -6}, {10, -6}}], LineBox[{{-10, -5}, {10, -5}}], 
      LineBox[{{-10, -4}, {10, -4}}], LineBox[{{-10, -3}, {10, -3}}], 
      LineBox[{{-10, -2}, {10, -2}}], LineBox[{{-10, -1}, {10, -1}}], 
      LineBox[{{-10, 0}, {10, 0}}], LineBox[{{-10, 1}, {10, 1}}], 
      LineBox[{{-10, 2}, {10, 2}}], LineBox[{{-10, 3}, {10, 3}}], 
      LineBox[{{-10, 4}, {10, 4}}], LineBox[{{-10, 5}, {10, 5}}], 
      LineBox[{{-10, 6}, {10, 6}}], LineBox[{{-10, 7}, {10, 7}}], 
      LineBox[{{-10, 8}, {10, 8}}], LineBox[{{-10, 9}, {10, 9}}], 
      LineBox[{{-10, 10}, {10, 10}}]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{1.318666127807984, 1.3893768059266387`}, {1.3893768059266387`,
        1.318666127807984}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{1.3540214668673114`, 1.3540214668673114`}, NCache[
       Rational[1, 200], 0.005]]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{1.4247321449859662`, 1.4247321449859662`}, {1.318666127807984,
        1.318666127807984}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{1.3540214668673114`, 1.3540214668673114`}, NCache[
       Rational[1, 40], 0.025]]}}, {
     LineBox[{{1.361167531510115, 1.6568582955414586`}, {1.6770530808476698`, 
      1.4114681577614099`}, {1.9224432186277185`, 1.7273537070989646`}, {
      1.606557669290164, 1.9727438448790133`}, {1.361167531510115, 
      1.6568582955414586`}}], {
      DiskBox[{1.5101863961782689`, 1.7943518920618986`}, NCache[
       Rational[1, 30], 0.03333333333333333]], 
      CircleBox[{1.7734243539595647`, 1.5898601105785246`}, NCache[
       Rational[1, 30], 0.03333333333333333]]}, 
     {Thickness[0.01], 
      LineBox[{{1.626362946837584, 1.7739960242458683`}, {1.6572478033002496`,
        1.6102159783945549`}}]}, {LineBox[{{-10, -10}, {-10, 10}}], 
      LineBox[{{-9, -10}, {-9, 10}}], LineBox[{{-8, -10}, {-8, 10}}], 
      LineBox[{{-7, -10}, {-7, 10}}], LineBox[{{-6, -10}, {-6, 10}}], 
      LineBox[{{-5, -10}, {-5, 10}}], LineBox[{{-4, -10}, {-4, 10}}], 
      LineBox[{{-3, -10}, {-3, 10}}], LineBox[{{-2, -10}, {-2, 10}}], 
      LineBox[{{-1, -10}, {-1, 10}}], LineBox[{{0, -10}, {0, 10}}], 
      LineBox[{{1, -10}, {1, 10}}], LineBox[{{2, -10}, {2, 10}}], 
      LineBox[{{3, -10}, {3, 10}}], LineBox[{{4, -10}, {4, 10}}], 
      LineBox[{{5, -10}, {5, 10}}], LineBox[{{6, -10}, {6, 10}}], 
      LineBox[{{7, -10}, {7, 10}}], LineBox[{{8, -10}, {8, 10}}], 
      LineBox[{{9, -10}, {9, 10}}], LineBox[{{10, -10}, {10, 10}}], 
      LineBox[{{-10, -10}, {10, -10}}], LineBox[{{-10, -9}, {10, -9}}], 
      LineBox[{{-10, -8}, {10, -8}}], LineBox[{{-10, -7}, {10, -7}}], 
      LineBox[{{-10, -6}, {10, -6}}], LineBox[{{-10, -5}, {10, -5}}], 
      LineBox[{{-10, -4}, {10, -4}}], LineBox[{{-10, -3}, {10, -3}}], 
      LineBox[{{-10, -2}, {10, -2}}], LineBox[{{-10, -1}, {10, -1}}], 
      LineBox[{{-10, 0}, {10, 0}}], LineBox[{{-10, 1}, {10, 1}}], 
      LineBox[{{-10, 2}, {10, 2}}], LineBox[{{-10, 3}, {10, 3}}], 
      LineBox[{{-10, 4}, {10, 4}}], LineBox[{{-10, 5}, {10, 5}}], 
      LineBox[{{-10, 6}, {10, 6}}], LineBox[{{-10, 7}, {10, 7}}], 
      LineBox[{{-10, 8}, {10, 8}}], LineBox[{{-10, 9}, {10, 9}}], 
      LineBox[{{-10, 10}, {10, 10}}]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{1.7700066167637545`, 1.840717294882409}, {1.840717294882409, 
       1.7700066167637545`}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{1.8053619558230818`, 1.8053619558230818`}, NCache[
       Rational[1, 200], 0.005]]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{1.8760726339417366`, 1.8760726339417366`}, {
       1.7700066167637545`, 1.7700066167637545`}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{1.8053619558230818`, 1.8053619558230818`}, NCache[
       Rational[1, 40], 0.025]]}}, {
     LineBox[{{1.8077817594581584`, 2.168296063431214}, {2.0596883682839313`, 
      1.8575822716068098`}, {2.3704021601083354`, 2.1094888804325826`}, {
      2.1184955512825625`, 2.4202026722569867`}, {1.8077817594581584`, 
      2.168296063431214}}], {
      DiskBox[{1.9841308727725082`, 2.268356551858733}, NCache[
       Rational[1, 30], 0.03333333333333333]], 
      CircleBox[{2.1940530467939854`, 2.0094283920050633`}, NCache[
       Rational[1, 30], 0.03333333333333333]]}, 
     {Thickness[0.01], 
      LineBox[{{2.008696727200695, 2.1608253473120627`}, {2.169487192365799, 
       2.116959596551734}}]}, {LineBox[{{-10, -10}, {-10, 10}}], 
      LineBox[{{-9, -10}, {-9, 10}}], LineBox[{{-8, -10}, {-8, 10}}], 
      LineBox[{{-7, -10}, {-7, 10}}], LineBox[{{-6, -10}, {-6, 10}}], 
      LineBox[{{-5, -10}, {-5, 10}}], LineBox[{{-4, -10}, {-4, 10}}], 
      LineBox[{{-3, -10}, {-3, 10}}], LineBox[{{-2, -10}, {-2, 10}}], 
      LineBox[{{-1, -10}, {-1, 10}}], LineBox[{{0, -10}, {0, 10}}], 
      LineBox[{{1, -10}, {1, 10}}], LineBox[{{2, -10}, {2, 10}}], 
      LineBox[{{3, -10}, {3, 10}}], LineBox[{{4, -10}, {4, 10}}], 
      LineBox[{{5, -10}, {5, 10}}], LineBox[{{6, -10}, {6, 10}}], 
      LineBox[{{7, -10}, {7, 10}}], LineBox[{{8, -10}, {8, 10}}], 
      LineBox[{{9, -10}, {9, 10}}], LineBox[{{10, -10}, {10, 10}}], 
      LineBox[{{-10, -10}, {10, -10}}], LineBox[{{-10, -9}, {10, -9}}], 
      LineBox[{{-10, -8}, {10, -8}}], LineBox[{{-10, -7}, {10, -7}}], 
      LineBox[{{-10, -6}, {10, -6}}], LineBox[{{-10, -5}, {10, -5}}], 
      LineBox[{{-10, -4}, {10, -4}}], LineBox[{{-10, -3}, {10, -3}}], 
      LineBox[{{-10, -2}, {10, -2}}], LineBox[{{-10, -1}, {10, -1}}], 
      LineBox[{{-10, 0}, {10, 0}}], LineBox[{{-10, 1}, {10, 1}}], 
      LineBox[{{-10, 2}, {10, 2}}], LineBox[{{-10, 3}, {10, 3}}], 
      LineBox[{{-10, 4}, {10, 4}}], LineBox[{{-10, 5}, {10, 5}}], 
      LineBox[{{-10, 6}, {10, 6}}], LineBox[{{-10, 7}, {10, 7}}], 
      LineBox[{{-10, 8}, {10, 8}}], LineBox[{{-10, 9}, {10, 9}}], 
      LineBox[{{-10, 10}, {10, 10}}]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{2.2213471057195253`, 2.29205778383818}, {2.29205778383818, 
       2.2213471057195253`}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{2.2567024447788526`, 2.2567024447788526`}, NCache[
       Rational[1, 200], 0.005]]}, 
     {RGBColor[0, 0, 1], 
      LineBox[{{2.3274131228975072`, 2.3274131228975072`}, {
       2.2213471057195253`, 2.2213471057195253`}}]}, 
     {RGBColor[0, 0, 1], 
      DiskBox[{2.2567024447788526`, 2.2567024447788526`}, NCache[
       Rational[1, 40], 0.025]]}}}},
  AspectRatio->Automatic,
  Axes->{False, False},
  Frame->True,
  ImageSize->{633., Automatic},
  PlotRange->{{-1.1, 4.1}, {-1.1, 4.1}}]], "Output",
 CellChangeTimes->{3.675266576252664*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(*--Saving to file--*)", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stf", " ", "=", " ", "t1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tg", " ", "=", " ", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{"Join", "[", " ", 
      RowBox[{
       RowBox[{"{", "t", "}"}], " ", ",", " ", 
       RowBox[{"N", "[", 
        RowBox[{"rft", "[", "t", "]"}], "]"}], " ", ",", " ", 
       RowBox[{"gft", "[", "t", "]"}], ",", " ", 
       RowBox[{"N", "[", 
        RowBox[{"gLocal", "[", 
         RowBox[{"gdes", "[", "t", "]"}], "]"}], "]"}]}], " ", "]"}], " ", 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "stf", ",", "0.05"}], "}"}]}], 
    "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/pv33/Matlab/examples/dp02/dp02_tt.dat\>\"", ",", " ", "tg"}], 
  "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dp2movie", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"gBiped", "[", 
      RowBox[{
       RowBox[{"qft", "[", "t", "]"}], ",", " ", 
       RowBox[{"gdes", "[", "t", "]"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", "70", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "dp2movie", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fMakeMovie", "[", 
   RowBox[{"\"\</tmp/mtmp\>\"", ",", "\"\<p5_dp2_tt\>\"", ",", "dp2movie"}], 
   "]"}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{947, 997},
WindowMargins->{{Automatic, 586}, {115, Automatic}},
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"Magnification"->1,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792},
"PostScriptOutputFile":>FrontEnd`FileName[{$RootDirectory, "home", "pvela", 
   "mathematica"}, "dp2.nb.ps", CharacterEncoding -> "iso8859-1"]},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 65, 0, 51, "Subtitle"],
Cell[647, 24, 722, 21, 121, "Input"],
Cell[CellGroupData[{
Cell[1394, 49, 41, 0, 81, "Section"],
Cell[CellGroupData[{
Cell[1460, 53, 44, 0, 45, "Subsection"],
Cell[CellGroupData[{
Cell[1529, 57, 1859, 39, 473, "Input"],
Cell[3391, 98, 544, 11, 24, "Message"],
Cell[3938, 111, 557, 11, 24, "Message"],
Cell[4498, 124, 559, 11, 24, "Message"],
Cell[5060, 137, 558, 11, 24, "Message"],
Cell[5621, 150, 473, 6, 275, "Output"],
Cell[6097, 158, 130, 1, 32, "Output"]
}, Open  ]],
Cell[6242, 162, 1168, 33, 319, "Input"],
Cell[7413, 197, 205, 6, 55, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[7655, 208, 69, 0, 37, "Subsection"],
Cell[CellGroupData[{
Cell[7749, 212, 3645, 109, 427, "Input"],
Cell[11397, 323, 243, 6, 32, "Output"],
Cell[11643, 331, 235, 3, 55, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11927, 340, 63, 0, 37, "Subsection"],
Cell[11993, 342, 2138, 57, 352, "Input"],
Cell[CellGroupData[{
Cell[14156, 403, 86, 2, 57, "Input"],
Cell[14245, 407, 91, 2, 49, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14397, 416, 46, 0, 81, "Section"],
Cell[CellGroupData[{
Cell[14468, 420, 68, 0, 45, "Subsection"],
Cell[14539, 422, 817, 25, 111, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15393, 452, 54, 0, 45, "Subsection"],
Cell[15450, 454, 2114, 57, 325, "Input"],
Cell[CellGroupData[{
Cell[17589, 515, 1720, 49, 121, "Input"],
Cell[19312, 566, 537, 18, 52, "Output"],
Cell[19852, 586, 209, 6, 52, "Output"],
Cell[20064, 594, 207, 6, 52, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[20332, 607, 38, 0, 51, "Section"],
Cell[CellGroupData[{
Cell[20395, 611, 49, 0, 45, "Subsection"],
Cell[CellGroupData[{
Cell[20469, 615, 45, 0, 35, "Subsubsection"],
Cell[20517, 617, 545, 15, 103, "Input"],
Cell[CellGroupData[{
Cell[21087, 636, 177, 4, 32, "Input"],
Cell[21267, 642, 140, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21444, 649, 1982, 54, 106, "Input"],
Cell[23429, 705, 11831, 204, 232, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35309, 915, 44, 0, 35, "Subsubsection"],
Cell[35356, 917, 588, 16, 129, "Input"],
Cell[CellGroupData[{
Cell[35969, 937, 2260, 69, 145, "Input"],
Cell[38232, 1008, 15598, 266, 249, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[53879, 1280, 57, 0, 29, "Subsubsection"],
Cell[53939, 1282, 596, 17, 129, "Input"],
Cell[CellGroupData[{
Cell[54560, 1303, 2962, 87, 177, "Input"],
Cell[57525, 1392, 112, 1, 32, "Output"],
Cell[57640, 1395, 11303, 194, 237, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[68992, 1595, 46, 0, 29, "Subsubsection"],
Cell[69041, 1597, 587, 16, 129, "Input"],
Cell[CellGroupData[{
Cell[69653, 1617, 2849, 80, 196, "Input"],
Cell[72505, 1699, 20169, 340, 232, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[92723, 2045, 50, 0, 29, "Subsubsection"],
Cell[92776, 2047, 384, 8, 55, "Input"],
Cell[CellGroupData[{
Cell[93185, 2059, 903, 26, 78, "Input"],
Cell[94091, 2087, 34612, 592, 125, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128740, 2684, 2496, 75, 193, "Input"],
Cell[131239, 2761, 1139, 36, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132415, 2802, 1688, 52, 109, "Input"],
Cell[134106, 2856, 15098, 255, 447, "Output"],
Cell[149207, 3113, 14634, 249, 229, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163902, 3369, 47, 0, 45, "Subsection"],
Cell[163952, 3371, 83, 2, 32, "Input"],
Cell[164038, 3375, 1802, 51, 143, "Input"],
Cell[165843, 3428, 220, 6, 55, "Input"],
Cell[166066, 3436, 2060, 65, 291, "Input"],
Cell[CellGroupData[{
Cell[168151, 3505, 1817, 56, 236, "Input"],
Cell[169971, 3563, 191, 5, 32, "Output"]
}, Open  ]],
Cell[170177, 3571, 6522, 176, 653, "Input"],
Cell[CellGroupData[{
Cell[176724, 3751, 343, 10, 55, "Input"],
Cell[177070, 3763, 1549, 44, 63, "Output"],
Cell[178622, 3809, 783, 23, 66, "Output"]
}, Open  ]],
Cell[179420, 3835, 3773, 103, 394, "Input"],
Cell[CellGroupData[{
Cell[183218, 3942, 1279, 36, 77, "Input"],
Cell[184500, 3980, 9331, 162, 365, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193868, 4147, 632, 17, 55, "Input"],
Cell[194503, 4166, 62581, 1034, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257121, 5205, 876, 23, 91, "Input"],
Cell[258000, 5230, 53577, 885, 252, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311614, 6120, 709, 19, 55, "Input"],
Cell[312326, 6141, 28401, 473, 241, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[340776, 6620, 91, 2, 45, "Subsection"],
Cell[340870, 6624, 230, 6, 27, "Input"],
Cell[341103, 6632, 344, 10, 43, "Input"],
Cell[341450, 6644, 5486, 159, 366, "Input"],
Cell[346939, 6805, 228, 6, 43, "Input"],
Cell[347170, 6813, 1953, 61, 218, "Input"],
Cell[349126, 6876, 273, 8, 57, "Input"],
Cell[349402, 6886, 6562, 180, 540, "Input"],
Cell[355967, 7068, 4078, 111, 251, "Input"],
Cell[360048, 7181, 615, 17, 27, "Input"],
Cell[360666, 7200, 632, 17, 27, "Input"],
Cell[361301, 7219, 477, 12, 27, "Input"],
Cell[361781, 7233, 709, 19, 43, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[362527, 7257, 94, 2, 37, "Subsection"],
Cell[362624, 7261, 151, 4, 32, "Input"],
Cell[362778, 7267, 558, 16, 129, "Input"],
Cell[363339, 7285, 66, 1, 32, "Input"],
Cell[363408, 7288, 1579, 49, 132, "Input"],
Cell[364990, 7339, 54, 1, 32, "Input"],
Cell[365047, 7342, 996, 30, 77, "Input"],
Cell[366046, 7374, 9118, 248, 851, "Input"],
Cell[375167, 7624, 31, 0, 32, "Input"],
Cell[375201, 7626, 31, 0, 32, "Input"],
Cell[375235, 7628, 54, 1, 32, "Input"],
Cell[375292, 7631, 1389, 40, 121, "Input"],
Cell[376684, 7673, 979, 28, 55, "Input"],
Cell[377666, 7703, 467, 14, 32, "Input"],
Cell[378136, 7719, 270, 8, 32, "Input"],
Cell[378409, 7729, 245, 7, 55, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[378703, 7742, 46, 0, 81, "Section"],
Cell[CellGroupData[{
Cell[378774, 7746, 44, 0, 45, "Subsection"],
Cell[378821, 7748, 20099, 525, 1866, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398957, 8278, 54, 0, 45, "Subsection"],
Cell[CellGroupData[{
Cell[399036, 8282, 1988, 62, 147, "Input"],
Cell[401027, 8346, 23957, 407, 648, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425045, 8760, 41, 0, 81, "Section"],
Cell[425089, 8762, 691, 19, 55, "Input"],
Cell[425783, 8783, 144, 4, 32, "Input"],
Cell[425930, 8789, 439, 12, 55, "Input"],
Cell[426372, 8803, 158, 4, 32, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
